agot_spawn_owned_adult_dragon_effect = {
	create_character = {
		location = location
		trait = dragon
		age = { 30 100 }
		template = agot_dragon_template
		random_traits = no
		save_scope_as = dragon
	}


	save_scope_as = owner

	hidden_effect = {
		agot_set_as_owned_dragon = {
			OWNER = scope:owner
			DRAGON = scope:dragon
		}
	}

	send_interface_message = {
		type = event_generic_good_text
		title = agot_spawn_dragon_effect.interface.t
		desc = agot_spawn_dragon_effect.interface.desc

		left_icon = scope:dragon
	}
}

agot_spawn_owned_hatchling_from_egg_effect = {
	$OWNER$ = { save_scope_as = owner }
	$EGG$ = { save_scope_as = egg }

	if = {
		limit = {
			agot_canon_dragons_enabled = yes
			scope:egg = {
				has_variable = dragon_embryo
			}
		}
		dp_spawn_canon_dragon_from_egg_effect = { EGG = scope:egg }
	}
	else_if = {
		limit = {
			agot_canon_dragons_enabled = yes
			exists = scope:cradlemate
			scope:cradlemate ?= {
				agot_has_canon_cradle_egg = yes
				NOT = { has_character_flag = hatched_canon_dragon }
			}
		}
		scope:cradlemate = { add_character_flag = hatched_canon_dragon }
		agot_spawn_canon_cradle_dragon_effect = { CRADLEMATE = scope:cradlemate }
		scope:dragon = {
			add_character_flag = {
				flag = agot_no_silly_name
				months = 1
			}
		}
	}
	else_if = {
		limit = {
			agot_canon_dragons_enabled = yes
			agot_is_valid_unpaired_canon_dragon_birth = { EGG = scope:egg }
		}
		agot_spawn_unpaired_canon_dragon = { EGG = scope:egg }
		scope:dragon = {
			add_character_flag = {
				flag = agot_no_silly_name
				months = 1
			}
		}
	}
	else = {
		create_character = {
			location = $OWNER$.location
			template = agot_dragon_hatchling_template
			random_traits = no
			save_scope_as = dragon
		}
	}


	hidden_effect = {
		agot_set_as_owned_dragon = {
			OWNER = scope:owner
			DRAGON = scope:dragon
		}
	}

	$OWNER$ = {
		send_interface_message = {
			type = event_generic_good_text
			title = agot_spawn_dragon_effect.interface.t
			desc = agot_spawn_dragon_effect.interface.desc

			left_icon = scope:dragon
		}
	}

	agot_set_dragon_parents = { EGG = $EGG$ }
	agot_dragon_tree_creation_effect = { DRAGON = scope:dragon }
	custom_tooltip = {
		text = agot_dragon_hatched_from_egg_effect_tt
		agot_remove_dragon_egg = { EGG = $EGG$ }
	}
}

agot_spawn_bonded_hatchling_from_egg_effect = {
	agot_spawn_owned_hatchling_from_egg_effect = { OWNER = $OWNER$ EGG = $EGG$ }

	create_character_memory = {
		type = agot_hatched_egg
		participants = {
			dragon = scope:dragon
		}
	}

	agot_bond_dragon_relation_effect = {
		ACTOR = $OWNER$
		DRAGON = scope:dragon
	}

	if = {
		limit = { exists = scope:cradlemate }
		scope:dragon = {
			set_variable = {
				name = cradlemate
				value = scope:cradlemate
			}
			if = {
				limit = {
					scope:cradlemate = { has_variable = destiny_child }
				}
				add_trait = dragon_destined
			}
		}
	}
}

agot_spawn_wild_hatchling_from_egg_effect = {
	create_character = {
		location = location
		template = agot_dragon_hatchling_template
		random_traits = no
		save_scope_as = dragon
	}


	agot_set_dragon_parents = { EGG = $EGG$ }
	agot_dragon_tree_creation_effect = { DRAGON = scope:dragon }
	agot_remove_dragon_egg = { EGG = $EGG$ }
}

agot_spawn_wild_dragon_effect = {
	create_character = {
		location = capital_province
		trait = dragon
		age = { 30 100 }
		template = agot_dragon_template
		random_traits = no
		save_scope_as = dragon
	}


	add_courtier = scope:dragon
	send_interface_message = {
		type = event_generic_good_text
		title = agot_spawn_wild_dragon_effect.interface.t
		desc = agot_spawn_wild_dragon_effect.interface.desc

		left_icon = scope:dragon
	}
}

agot_spawn_wild_child_dragon_effect = {
	create_character = {
		location = capital_province
		trait = dragon
		age = 0
		template = agot_dragon_hatchling_template
		random_traits = no
		save_scope_as = dragon
	}



	send_interface_message = {
		type = event_generic_good_text
		title = agot_spawn_wild_dragon_effect.interface.t
		desc = agot_spawn_wild_dragon_effect.interface.desc

		left_icon = scope:dragon
	}
}

agot_spawn_young_dragon_effect = {
	create_character = {
		location = location
		template = agot_young_dragon_template
		random_traits = no
		save_scope_as = dragon
	}


	send_interface_message = {
		type = event_generic_good_text
		title = agot_spawn_dragon_effect.interface.t
		desc = agot_spawn_dragon_effect.interface.desc

		left_icon = scope:dragon
	}
}

agot_spawn_adult_dragon_effect = {
	create_character = {
		location = location
		template = agot_adult_dragon_template
		random_traits = no
		save_scope_as = dragon
	}


	send_interface_message = {
		type = event_generic_good_text
		title = agot_spawn_dragon_effect.interface.t
		desc = agot_spawn_dragon_effect.interface.desc

		left_icon = scope:dragon
	}
}

agot_spawn_old_dragon_effect = {
	create_character = {
		location = location
		template = agot_old_dragon_template
		random_traits = no
		save_scope_as = dragon
	}


	send_interface_message = {
		type = event_generic_good_text
		title = agot_spawn_dragon_effect.interface.t
		desc = agot_spawn_dragon_effect.interface.desc

		left_icon = scope:dragon
	}
}

agot_spawn_monster_dragon_effect = {
	create_character = {
		location = location
		template = agot_monster_dragon_template
		random_traits = no
		save_scope_as = dragon
	}


	send_interface_message = {
		type = event_generic_good_text
		title = agot_spawn_dragon_effect.interface.t
		desc = agot_spawn_dragon_effect.interface.desc

		left_icon = scope:dragon
	}
}

agot_populate_dragons = { # For debugging purposes
	every_ruler = {
		limit = {
			age >= 16
		}
		random_list = {
			95 = {}
			5 = {
				agot_spawn_owned_adult_dragon_effect = yes
				save_scope_as = recipient
				if = {
					limit = { exists = scope:dragon }
					agot_tame_dragon = {
						TAMER = scope:recipient
						DRAGON = scope:dragon
					}
				}
			}
		}
	}
}