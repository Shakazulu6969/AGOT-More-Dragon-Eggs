namespace = agot_ruins

# Ruin is finished - Choose holding type
agot_ruins.1000 = {
	type = character_event
	title = agot_ruins.1000.t
	desc = agot_ruins.1000.d

	theme = stewardship_domain_focus
	override_background = { reference = army_camp }

	left_portrait = {
		character = root
		animation = chancellor
	}

	immediate = {
		scope:completed_ruin = {
			remove_province_modifier = agot_ruin_reconstruction
			barony = { set_coa = this.holder.house }
		}
		if = {
			limit = {
				scope:completed_ruin = title:b_castamere.title_province
			}
			scope:completed_ruin.barony = { set_capital_barony = yes }
		}
	}

	option = {
		name = agot_ruins.1000.a

		add_prestige = 1000
		scope:completed_ruin = {
			set_holding_type = castle_holding
			add_building = castle_02
		}
	}

	option = {
		name = agot_ruins.1000.b
		trigger = {
			NOR = {
				scope:completed_ruin = title:b_castamere.title_province
				scope:completed_ruin = title:b_summerhall.title_province
			}
		}

		add_prestige = 1000
		scope:completed_ruin = {
			set_holding_type = city_holding
			add_building = city_02
		}
	}

	option = {
		name = agot_ruins.1000.c
		trigger = {
			NOR = {
				scope:completed_ruin = title:b_castamere.title_province
				scope:completed_ruin = title:b_summerhall.title_province
			}
		}

		add_piety = 1000
		scope:completed_ruin = {
			set_holding_type = church_holding
			add_building = temple_02
		}
	}
}

agot_ruins.2000 = { # Get dragon egg from restoring Summerhall
	type = character_event
	title = agot_ruins.2000.t
	desc = agot_ruins.2000.d

	theme = stewardship_domain_focus
	override_background = { reference = army_camp }

	left_portrait = {
		character = root
		scripted_animation = mde_holding_dragon_egg_animation
	}

	artifact = {
		position = lower_right_portrait
		target = scope:newly_created_artifact
	}

	immediate = {
		if = {
			limit = {
				NAND = {
					has_game_rule = ai_can_not_get_eggs
					is_ai = yes
				}
			}
			random_list = {
				1 = {
					character:dragon_morning = { save_scope_as = dragon_parent }
					create_artifact_dragon_egg_greengrey_effect = { OWNER = root }
				}
				1 = {
					character:dragon_syrax = { save_scope_as = dragon_parent }
					character:dragon_caraxes = { save_scope_as = dragon_parent_other }
					create_artifact_dragon_egg_redblackgold_effect = { OWNER = root }
				}
			}
			set_global_variable = summerhall_egg_found
		}
	}

	option = {
		name = agot_ruins.2000.a

		trigger_event = {
			id = agot_ruins.1000
			days = { 30 60 }
		}
	}
}

agot_ruins.3000 = { # Moat Cailin Restoration Begins
	type = character_event
	title = agot_ruins.3000.t
	desc = agot_ruins.3000.d

	theme = stewardship_domain_focus
	override_background = { reference = wilderness_wetlands }

	immediate = {
		add_character_flag = rebuilding_moat_cailin
		add_character_flag = started_rebuilding_moat_cailin
	}

	right_portrait = {
		character = root
		animation = chancellor
	}

	option = {
		name = agot_ruins.3000.a
	}
}

agot_ruins.3001 = { # Moat Cailin Restoration progresses
	type = character_event
	title = agot_ruins.3001.t
	desc = agot_ruins.3001.d

	theme = stewardship_domain_focus
	override_background = { reference = wilderness_wetlands }

	immediate = {
		remove_character_flag = rebuilding_moat_cailin
		remove_character_flag = started_rebuilding_moat_cailin
	}

	right_portrait = {
		character = root
		animation = chancellor
	}

	option = {
		name = agot_ruins.3001.a
		add_piety = 150
	}

	option = {
		name = agot_ruins.3001.b
		add_dread = major_dread_gain
	}
}

agot_ruins.3002 = { # Moat Cailin Restoration continues to the final stage
	type = character_event
	title = agot_ruins.3002.t
	desc = agot_ruins.3002.d

	theme = stewardship_domain_focus
	override_background = { reference = wilderness_wetlands }

	immediate = {
		add_character_flag = rebuilding_moat_cailin
		add_character_flag = started_rebuilding_moat_cailin
	}

	right_portrait = {
		character = root
		animation = chancellor
	}

	option = {
		name = agot_ruins.3002.a
	}
}

agot_ruins.3003 = { # Moat Cailin Restored
	type = character_event
	title = agot_ruins.3003.t
	desc = agot_ruins.3003.d

	theme = stewardship_domain_focus
	override_background = { reference = wilderness_wetlands }

	immediate = {
		remove_character_flag = rebuilding_moat_cailin
		remove_character_flag = started_rebuilding_moat_cailin
	}

	right_portrait = {
		character = root
		animation = chancellor
	}

	option = {
		trigger = { dynasty = dynasty:dynn_Stark }
		name = agot_ruins.3003.a_stark

		add_prestige = 1000
		dynasty = { add_dynasty_prestige = monumental_dynasty_prestige_value }
	}

	option = {
		trigger = { NOT = { dynasty = dynasty:dynn_Stark } }
		name = agot_ruins.3003.a

		add_prestige = 1000
		dynasty = { add_dynasty_prestige = monumental_dynasty_prestige_value }
	}

	option = {
		name = agot_ruins.3003.b

		give_nickname = nick_northern_shield
		add_legitimacy = medium_legitimacy_gain
		dynasty = { add_dynasty_prestige = monumental_dynasty_prestige_value }
	}
}

agot_ruins.9998 = {
	hidden = yes

	immediate = {
		title:c_moat_cailin.holder = {
			random_memory = {
				limit = {
					OR = {
						has_memory_type = soulmate_died
						has_memory_type = lover_died
						has_memory_type = best_friend_died
						has_memory_type = friend_died
					}
				}
				memory_participant:dead_relation = { save_scope_as = deceased_character }
			}

			province:1650.var:constructor = { save_scope_as = restoration_constructor }
			trigger_event = agot_ruins.9999
		}
	}
}

agot_ruins.9999 = { # Cancel great ruin restoration
	type = character_event
	title = agot_ruins.9999.t

	desc = {
		desc = agot_ruins.9999.opening

		random_valid = {
			triggered_desc = { # Recent Death Memory
				trigger = {
					exists = scope:deceased_character

					any_memory = {
						OR = {
							has_memory_type = friend_died
							has_memory_type = best_friend_died
							has_memory_type = lover_died
							has_memory_type = soulmate_died
						}
						memory_age_years < 3
					}
				}
				desc = agot_ruins.9999.recent_loss
			}

			triggered_desc = { # At war
				trigger = {
					is_at_war = yes
				}
				desc = agot_ruins.9999.at_war
			}

			triggered_desc = { # Less than 100 gold
				trigger = {
					AND = {
						root.gold < 100
						root.gold > 0
						has_character_flag = started_rebuilding_moat_cailin
					}
				}
				desc = agot_ruins.9999.poor
			}

			triggered_desc = { # Bankrupt
				trigger = {
					AND = {
						root.gold < 0
						has_character_flag = started_rebuilding_moat_cailin
					}
				}
				desc = agot_ruins.9999.bankrupt
			}

			triggered_desc = { # Is Lazy
				trigger = {
					has_trait = lazy
				}
				desc = agot_ruins.9999.lazy
			}

			triggered_desc = { # Is Greedy
				trigger = {
					AND = {
						has_trait = greedy
						has_character_flag = started_rebuilding_moat_cailin
					}
				}
				desc = agot_ruins.9999.greedy
			}

			triggered_desc = { # Is Fickle
				trigger = {
					has_trait = fickle
				}
				desc = agot_ruins.9999.fickle
			}

			triggered_desc = { # Is Paranoid
				trigger = {
					has_trait = paranoid
				}
				desc = agot_ruins.9999.paranoid
			}

			triggered_desc = { # Is Impatient
				trigger = {
					has_trait = impatient
				}
				desc = agot_ruins.9999.impatient
			}

			triggered_desc = { # Relative started the project
				trigger = {
					AND = {
						NOT = {
							has_character_flag = started_rebuilding_moat_cailin
						}
						scope:restoration_constructor.dynasty = root.dynasty
					}
				}
				desc = agot_ruins.9999.relation
			}

			triggered_desc = { # Someone else took over
				trigger = {
					NOT = {
						has_character_flag = started_rebuilding_moat_cailin
						scope:restoration_constructor.dynasty = root.dynasty
					}
				}
				desc = agot_ruins.9999.someone_else
			}

			triggered_desc = { # No stress
				trigger = {
					stress < 100
				}
				desc = agot_ruins.9999.no_stress
			}

			triggered_desc = { # Level one stress
				trigger = {
					AND = {
						stress >= 100
						stress < 200
					}
				}
				desc = agot_ruins.9999.one_stress
			}

			triggered_desc = { # Level two stress
				trigger = {
					AND = {
						stress >= 200
						stress < 300
					}
				}
				desc = agot_ruins.9999.two_stress
			}

			triggered_desc = { # Level three stress
				trigger = {
					AND = {
						stress >= 300
					}
				}
				desc = agot_ruins.9999.three_stress
			}
		}
		desc = agot_ruins.9999.outro
	}

	theme = stewardship_domain_focus

	override_background = {
		trigger = { has_character_flag = rebuilding_moat_cailin }
		reference = wilderness_wetlands
	}

	right_portrait = {
		character = root
		animation = saddnes
	}

	option = {
		name = agot_ruins.9999.a
		if = {
			limit = {
				has_character_flag = started_rebuilding_moat_cailin
			}
			remove_character_flag = started_rebuilding_moat_cailin
		}

		if = {
			limit = {
				has_character_flag = rebuilding_moat_cailin
			}
			remove_character_flag = rebuilding_moat_cailin
		}

		province:1650 = { remove_variable = constructor }
	}
}