namespace = agot_targaryen_exile_invasion

scripted_trigger neighboring_free_city_ruler_trigger = {
	is_available_adult = yes
	NOR = {
		any_ally = {
			this = title:e_the_iron_throne.holder
		}
		any_relation = {
			type = friend
			this = title:e_the_iron_throne.holder
		}
		any_relation = {
			type = lover
			this = title:e_the_iron_throne.holder
		}
		has_really_bad_opinion_of_root_trigger = yes
	}
	NOR = {
		has_variable = legitimist_supporter
		is_target_in_variable_list = {
			name = exiles_recently_asked_for_support
			target = this
		}
	}
}

scripted_trigger westeros_secret_ally_trigger = {
	is_available_adult = yes
	NOR = {
		any_ally = {
			this = title:e_the_iron_throne.holder
		}
		any_relation = {
			type = friend
			this = title:e_the_iron_throne.holder
		}
		any_relation = {
			type = lover
			this = title:e_the_iron_throne.holder
		}
		has_really_bad_opinion_of_root_trigger = yes
	}
	NOR = {
		has_variable = legitimist_supporter
		is_target_in_variable_list = {
			name = exiles_recently_asked_for_support
			target = this
		}
	}
}

scripted_trigger targaryen_loyalist_trigger = {
	OR = {
		house = dynasty:dynn_Hayford.dynasty_founder.house
		house = dynasty:dynn_Goodbrook.dynasty_founder.house
		house = dynasty:dynn_Rowan.dynasty_founder.house
		house = dynasty:dynn_Oakheart.dynasty_founder.house
		house = dynasty:dynn_Tarly.dynasty_founder.house
		house = dynasty:dynn_Hightower.dynasty_founder.house
		house = dynasty:dynn_Hasty.dynasty_founder.house
		house = dynasty:dynn_Lonmouth.dynasty_founder.house
		house = dynasty:dynn_Rykker.dynasty_founder.house
		house = dynasty:dynn_Ashford.dynasty_founder.house
		house = dynasty:dynn_Boggs.dynasty_founder.house
		house = dynasty:dynn_Brune.dynasty_founder.house
		house = dynasty:dynn_Bush.dynasty_founder.house
		house = dynasty:dynn_Pyne.dynasty_founder.house
		house = dynasty:dynn_Hardy.dynasty_founder.house
		house = dynasty:dynn_Cave.dynasty_founder.house
		house = dynasty:dynn_Crabb.dynasty_founder.house
		house = dynasty:dynn_Celtigar.dynasty_founder.house
		house = dynasty:dynn_Velaryon.dynasty_founder.house
		house = dynasty:dynn_Scales.dynasty_founder.house
		house = dynasty:dynn_Massey.dynasty_founder.house
		house = dynasty:dynn_Mooton.dynasty_founder.house
		house = dynasty:dynn_Butterwell.dynasty_founder.house
		house = dynasty:dynn_Sunderland.dynasty_founder.house
		house = dynasty:dynn_Yronwood.dynasty_founder.house
		house = dynasty:dynn_Vyrwel.dynasty_founder.house
		house = dynasty:dynn_Hersy.dynasty_founder.house
		house = dynasty:dynn_Darry.dynasty_founder.house
	}
}

scripted_trigger westeros_likely_to_be_friendly_to_targaryen_exiles_trigger = {
	has_really_bad_opinion_of_character_trigger = {
		CHARACTER = title:e_the_iron_throne.holder
	}
}

scripted_effect legitimist_support_add_effect = {
	add_gold = { value = agot_targ_legit_gold_value }
	spawn_army = {
		men_at_arms = {
			type = accolade_maa_vanguards
			stacks = {
				value = 2
				multiply = var:legitimist_support
			}
		}
		men_at_arms = {
			type = accolade_maa_archers
			stacks = {
				value = 2
				multiply = var:legitimist_support
			}
		}
		men_at_arms = {
			type = accolade_maa_lancers
			stacks = {
				value = var:legitimist_support
				min = 1
			}
		}
		inheritable = yes
		uses_supply = no
		location = root.location
		name = ep3_legitimist_army
	}
	scope:petitioned_ruler = {
		add_hook = {
			target = root
			type = favor_hook
		}
	}
}

scripted_effect targ_destined_dragon_creation_effect = {
	every_courtier = {
		limit = {
			has_trait = dragon
			age < 1
		}
		agot_clear_dragon_genetic_traits_effect = yes
		add_trait = dragon_destined
		add_to_global_variable_list = {
			name = targaryen_exiles_destined_dragons
			target = this
		}
		if = {
			limit = {
				exists = scope:egg_owner
				scope:egg_owner = {
					is_alive = yes
				}
			}
			hidden_effect = { set_relation_agot_story_dragon = scope:egg_owner }
		}
		else = {
			hidden_effect = { set_relation_agot_story_dragon = root }
		}
	}
}


# Mirror of ep3_laamps.8102, but tailored for this chain
agot_targaryen_exile_invasion.0001 = {
	type = character_event
	title = ep3_laamps.8102.t
	desc = ep3_laamps.8102.desc

	theme = diplomacy

	override_background = { reference = study }

	left_portrait = {
		character = root
		animation = debating
	}

	right_portrait = {
		character = scope:petitioned_ruler
		animation = thinking
	}

	immediate = {
		title:e_the_iron_throne = {
			save_scope_as = claimed_title
		}
		title:b_the_red_keep = { save_scope_as = capital_barony }
		if = {
			limit = {
				NOT = {
					has_variable = legitimist_claimed_title
				}
			}
			set_variable = {
				name = legitimist_claimed_title
				value = scope:claimed_title
			}
		}
		else = {
			var:legitimist_claimed_title = {
				save_scope_as = claimed_title
			}
		}

		#setup turns
		set_variable = {
			name = legitimist_turns
			value = 4
		}

		#setup support and obligations level
		set_variable = {
			name = legitimist_support
			value = 1
		}

		set_variable = {
			name = legitimist_obligations
			value = 2
		}
	}

	option = {
		name = ep3_laamps.8102.a
		custom_tooltip = ep3_laamps.8102.a.desc

		if = {
			limit = {
				is_ai = yes
			}
			change_variable = {
				name = legitimist_support
				add = 2
			}
			change_variable = {
				name = legitimist_obligations
				add = 1
			}
		}
		ai_chance = {
			base = 100
		}
	}

	option = {
		name = ep3_laamps.8102.d
		custom_tooltip = ep3_laamps.8102.d.desc
		trigger = {
			OR = {
				has_relation_friend = scope:petitioned_ruler
			}
		}
		change_variable = {
			name = legitimist_turns
			add = 4
		}
		change_variable = {
			name = legitimist_support
			add = 1
		}

	}

	option = {
		name = ep3_laamps.8102.e
		custom_tooltip = ep3_laamps.8102.e.desc
		trigger = {
			has_hook = scope:petitioned_ruler
		}
		remove_hook = { target = scope:petitioned_ruler }
		change_variable = {
			name = legitimist_support
			add = 2
		}
	}

	after = {
		trigger_event = agot_targaryen_exile_invasion.0002
	}
}
# Mirror of ep3_laamps.8103
agot_targaryen_exile_invasion.0002 = {
	type = character_event
	title = ep3_laamps.8103.t
	desc = {
		random_valid = {
			desc = ep3_laamps.8103.intro_1
			desc = ep3_laamps.8103.intro_2
			desc = ep3_laamps.8103.intro_3
		}
		first_valid = {
			triggered_desc = {
				trigger = { var:legitimist_turns = 0 }
				desc = ep3_laamps.8103.no_more_turns_flavor
			}
			random_valid = {
				desc = ep3_laamps.8103.mid_1
				desc = ep3_laamps.8103.mid_2
				desc = ep3_laamps.8103.mid_3
			}
		}

		desc = ep3_laamp.8103.turns_left
		first_valid = {
			triggered_desc = {
				trigger = { var:legitimist_support >= 6 }
				desc = targ.support_6
			}
			triggered_desc = {
				trigger = { var:legitimist_support >= 5 }
				desc = targ.support_5
			}
			triggered_desc = {
				trigger = { var:legitimist_support >= 4 }
				desc = targ.support_4
			}
			triggered_desc = {
				trigger = { var:legitimist_support >= 3 }
				desc = targ.support_3
			}
			triggered_desc = {
				trigger = { var:legitimist_support >= 2 }
				desc = targ.support_2
			}
			triggered_desc = {
				trigger = { var:legitimist_support >= 1 }
				desc = targ.support_1
			}
		}
		first_valid = {
			triggered_desc = {
				trigger = { var:legitimist_obligations = 1 }
				desc = ep3_laamps.8103.one_obligations
			}
			desc = ep3_laamps.8103.obligations
		}
	}

	theme = diplomacy
	override_background = { reference = study }

	left_portrait = {
		character = root
		animation = debating
	}

	right_portrait = {
		character = scope:petitioned_ruler
		animation = personality_forgiving
	}

	trigger = {
		var:legitimist_turns >= 1
	}

	on_trigger_fail = {
		trigger_event = agot_targaryen_exile_invasion.0003
	}

	option = { #Moar troops!
		name = ep3_laamps.8103.a
		custom_tooltip = ep3_laamps.8103.a.desc
		trigger = {
			var:legitimist_support < 6
			var:legitimist_turns >= 1
		}
		change_variable = {
			name = legitimist_support
			add = 1
		}
		change_variable = {
			name = legitimist_obligations
			add = 1
		}
		trigger_event = agot_targaryen_exile_invasion.0002
	}

	option = { #Moar troops, but without obligations increase. harder with obligations/support imbalance
		name = ep3_laamps.8103.b

		trigger = {
			var:legitimist_support < 6
			var:legitimist_turns >= 1
		}
		duel = {
			target = scope:petitioned_ruler
			skill = diplomacy

			60 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					min = -49
				}
				custom_tooltip = ep3_laamps.8103.b.desc
				send_interface_toast = {
					title = ep3_laamps.8103.b.success
					left_icon = scope:petitioned_ruler
				}
				change_variable = {
					name = legitimist_support
					add = 1
				}
			}
			40 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -49
				}
				modifier = {
					add = {
						value = var:legitimist_support
						add = 1
						subtract = var:legitimist_obligations
						multiply = 10
					}
				}
				desc = ep3_laamps.8103.b.failure
				send_interface_toast = {
					title = ep3_laamps.8103.b.failure
					left_icon = scope:petitioned_ruler
				}
				add_prestige = minor_prestige_loss
			}
		}
		trigger_event = agot_targaryen_exile_invasion.0002
	}

	option = { #Try to get the level of obligations down. harder with obligations/support imbalance
		name = ep3_laamps.8103.c
		custom_tooltip = ep3_laamps.8103.c.desc
		trigger = {
			var:legitimist_obligations > 1
			var:legitimist_turns >= 1
		}
		duel = {
			target = scope:petitioned_ruler
			skill = stewardship

			70 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					min = -49
				}
				desc = ep3_laamps.8103.c.success
				send_interface_toast = {
					title = ep3_laamps.8103.c.success
					left_icon = scope:petitioned_ruler
				}
				change_variable = {
					name = legitimist_obligations
					subtract = 1
				}
			}
			30 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					min = -49
				}
				modifier = {
					add = {
						value = var:legitimist_support
						add = 1
						subtract = var:legitimist_obligations
						multiply = 10
					}
				}
				desc = ep3_laamps.8103.c.failure
				send_interface_toast = {
					title = ep3_laamps.8103.c.failure
					left_icon = scope:petitioned_ruler
				}
				add_prestige = minor_prestige_loss
			}
		}
		trigger_event = agot_targaryen_exile_invasion.0002
	}

	option = { #I'm good
		name = ep3_laamps.8103.d
		custom_tooltip = ep3_laamps.8103.d.desc
		trigger_event = agot_targaryen_exile_invasion.0003

		ai_chance = {
			base = 100
		}
	}

	after = {
		if = {
			limit = {
				has_variable = legitimist_turns
			}
			change_variable = {
				name = legitimist_turns
				subtract = 1
			}
		}
	}
}
# Mirror of ep3_laamps.8105
agot_targaryen_exile_invasion.0003 = {
	type = character_event
	title = ep3_laamps.8105.t
	desc = agot_targaryen_exile_invasion.0003.desc

	theme = diplomacy
	override_background = { reference = study }

	left_portrait = {
		character = root
		animation = thinking
	}

	right_portrait = {
		character = scope:petitioned_ruler
		animation = toast_goblet
	}

	option = {
		name = ep3_laamps.8105.a
		custom_tooltip = ep3_laamps.8105.invalidations_reasons
		scope:petitioned_ruler = {
			set_variable = {
				name = legitimist_obligations_left
				value = root.var:legitimist_obligations
			}
		}
		if = {
			limit = {
				is_adult = no
			}
			trigger_event = {
				id = agot_targaryen_exile_invasion.0004
				years = agot_time_to_win_invasion_for_underage_exiles_value
			}
			custom_tooltip = agot_targaryen_exile_invasion.0003.a_tt
		}
		else = {
			trigger_event = {
				id = agot_targaryen_exile_invasion.0004
				years = 8
			}
			custom_tooltip = ep3_laamps.8105.a.success
		}
		#debug_log = "Exiles Gold: [THIS.Char.GetGold|0]"
		legitimist_support_add_effect = yes

		add_to_variable_list = { #used to handle root death
			name = legitimist_supporters
			target = scope:petitioned_ruler
		}
		hidden_effect = {
			every_character_active_contract = {
				limit = { has_task_contract_type = agot_scripted_laamp_legitimist_support_contract }
				complete_task_contract = success_standard
			}
		}

		ai_chance = {
			base = 100
		}
	}

	option = {
		name = ep3_laamps.8105.c
		custom_tooltip = ep3_laamps.8105.c.desc
		trigger_event = {
			id = ep3_laamps.8107
			months = { 1 2 }
		}
		hidden_effect = {
			scope:task_contract = {
				complete_task_contract = success_standard
			}
		}
		ai_chance = {
			base = 0
		}
	}

	after = {
		remove_variable = legitimist_turns
		remove_variable = legitimist_support
		remove_variable = legitimist_obligations
	}
}

# Mirror of ep3_laamps.8106
agot_targaryen_exile_invasion.0004 = {
	type = character_event
	title = ep3_laamps.8106.t
	desc = ep3_laamps.8106.desc

	theme = diplomacy
	override_background = { reference = army_camp }

	left_portrait = {
		character = root
		animation = personality_rational
	}

	right_portrait = {
		character = scope:petitioned_ruler
		animation = personality_vengeful
	}

	trigger = {
		government_has_flag = government_is_landless_adventurer
		has_realm_law = camp_purpose_legitimists
		NOT = {
			is_at_war = yes
			any_held_title = {
				this = scope:claimed_title
			}
		}
		scope:petitioned_ruler = {
			is_alive = yes
			is_landed = yes
			NOR = {
				is_imprisoned_by = root
				AND = {
					is_at_war = yes
					any_character_war = {
						OR = {
							primary_attacker = root
							primary_defender = root
						}
					}
				}
			}
		}
	}

	on_trigger_fail = {
		if = {
			limit = {
				is_at_war = yes
			}
			trigger_event = { #let us try again later
				id = agot_targaryen_exile_invasion.0004
				months = { 2 4 }
			}
		}
		else_if = {
			limit = {
				any_held_title = {
					this = scope:claimed_title
				}
			}
			trigger_event = { #payup buddy boi
				id = ep3_laamps.8111
				months = { 18 20 }
			}
		}
		else_if = {
			limit = {
				scope:petitioned_ruler = {
					OR = {
						is_alive = no
						is_landed = no
						is_imprisoned_by = root
						AND = {
							is_at_war = yes
							any_character_war = {
								OR = {
									primary_attacker = root
									primary_defender = root
								}
							}
						}
					}
				}
			}
			trigger_event = {
				id = ep3_laamps.8110
			}
		}
		else = {
			trigger_event = { #you failed
				id = ep3_laamps.8107
				months = { 1 2 }
			}
		}
	}

	option = { #ask for a delay
		name = ep3_laamps.8106.b
		custom_tooltip = ep3_laamps.8106.b.desc
		#diplo/martial duel - the time is not right for war you see
		#trigger this event after next 2 years
		#obligations increase if you don't succeed
		duel = {
			target = scope:petitioned_ruler
			skill = martial

			65 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					min = -49
				}
				custom_tooltip = ep3_laamps.8106.b.success
				send_interface_toast = {
					title = ep3_laamps.8106.b.success
					left_icon = scope:petitioned_ruler
				}
			}
			35 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					min = -49
				}
				custom_tooltip = ep3_laamps.8106.b.failure
				send_interface_toast = {
					title = ep3_laamps.8106.b.failure
					left_icon = scope:petitioned_ruler
				}
				scope:petitioned_ruler = {
					change_variable = {
						name = legitimist_obligations_left
						add = 1
					}
				}
				trigger_event = {
					id = agot_targaryen_exile_invasion.0004
					years = 2
				}
			}
		}
		ai_chance = {
			base = 100
		}
	}

	option = { #actually, nvm, I have other plans now
		name = ep3_laamps.8106.c
		custom_tooltip = ep3_laamps.8106.c.desc

		trigger_event = {
			id = ep3_laamps.8107
			months = { 1 2 }
		}
		ai_chance = {
			base = 0
		}
	}
}


# Pings a ruler for you to beg support to
agot_targaryen_exile_invasion.0100 = {
	hidden = yes
	override_icon = {
		reference = "gfx/interface/icons/event_types/type_war.dds"
	}
	theme = war
	trigger = {
		is_available = yes
		domicile.domicile_location.county ?= {
			any_neighboring_county = {
				holder = {
					neighboring_free_city_ruler_trigger = yes
				}
			}
		}
		NOT = {
			has_character_flag = recently_had_targ_exile_supporter_event
		}
	}
	left_portrait = {
		character = root
		animation = chancellor
	}
	right_portrait = {
		character = scope:nearby_leader
		animation = steward
	}
	immediate = {
		add_character_flag = {
			flag = recently_had_targ_exile_supporter_event
			days = { 90 100 }
		}
		domicile.domicile_location.county ?= {
			random_neighboring_county = {
				limit = {
					holder = {
						neighboring_free_city_ruler_trigger = yes
					}
				}
				this.holder = { save_scope_as = nearby_leader }
			}
		}
		agot_appoint_travel_leader_effect = yes
		start_travel_plan = {
			destination = scope:nearby_leader.capital_province
			on_start_on_action = on_travel_relocation_start
			on_arrival_event = agot_targaryen_exile_invasion.0101
			on_arrival_destinations = last
			return_trip = no
			travel_with_domicile = yes
		}
		add_to_variable_list = {
			name = exiles_recently_asked_for_support
			target = scope:nearby_leader
		}
	}
}
# Travel to said ruler
agot_targaryen_exile_invasion.0101 = {
	hidden = yes
	immediate = {
		add_character_flag = {
			flag = recently_had_targ_exile_supporter_event
			days = { 90 100 }
		}
		scope:nearby_leader = {
			save_scope_as = petitioned_ruler
		}
		trigger_event = agot_targaryen_exile_invasion.0001
	}
}

scripted_trigger illyrio_has_eggs_for_exiles = {
	character:Mopatis_1 = {
		has_really_bad_opinion_of_root_trigger = no
		is_ai = yes
		any_character_artifact = {
			has_variable = dragon_egg
			count >= 3
		}
	}
}

agot_targaryen_exile_invasion.0300 = {
	hidden = yes
	immediate = {
		if = {
			limit = {
				illyrio_has_eggs_for_exiles = yes
				NOT = {
					has_game_rule = agot_faegon_identity_open_blackfyre
				}
			}
			character:Mopatis_1 = {
				save_scope_as = egg_granter
				every_character_artifact = {
					limit = { has_variable = dragon_egg }
					add_to_list = eggs_to_transfer
				}
			}
		}
		else_if = {
			limit = {
				any_artifact = {
					has_variable = dragon_egg
					has_variable = dragon_embryo
					OR = {
						var:dragon_embryo = flag:drogon
						var:dragon_embryo = flag:viserion
						var:dragon_embryo = flag:rhaegal
					}
					this.artifact_owner = {
						any_character_artifact = {
							has_variable = dragon_egg
							has_variable = dragon_embryo
							OR = {
								var:dragon_embryo = flag:drogon
								var:dragon_embryo = flag:viserion
								var:dragon_embryo = flag:rhaegal
							}
							count >= 3
						}
					}
				}
			}
			random_artifact = {
				limit = {
					has_variable = dragon_egg
					has_variable = dragon_embryo
					OR = {
						var:dragon_embryo = flag:drogon
						var:dragon_embryo = flag:viserion
						var:dragon_embryo = flag:rhaegal
					}
				}
				artifact_owner = {
					save_scope_as = egg_granter
					every_character_artifact = {
						limit = { has_variable = dragon_egg }
						add_to_list = eggs_to_transfer
					}
				}
			}
		}
		else = {
			set_global_variable = no_dany_eggs
			create_character = {
				location = title:b_mummer_lane.title_province
				faith = title:b_mummer_lane.faith
				culture = title:b_mummer_lane.culture
				age = { 35 45 }
				random_traits_list = {
					count = 1
					education_stewardship_1 = {}
					education_stewardship_2 = {}
					education_stewardship_3 = {}
					education_stewardship_4 = {}
				}
				dynasty = generate
				random_traits = yes
				gender_female_chance = 50
				stewardship = {
					min_template_decent_skill
					max_template_decent_skill
				}
				prowess = { 2 10 }
				martial = { 2 10 }
				diplomacy = { 5 13 }
				learning = { 5 13 }
				save_scope_as = egg_granter
				after_creation = {
					set_variable = agot_delete_char
				}
			}
		}
		trigger_event = agot_targaryen_exile_invasion.0301
	}
}

scripted_effect generated_eggs_cleanup_effect = {
	# This is used to ensure that if Dany hatches a set of eggs other than Illyrio's,
	# the dragon's parent will be the correct, non-dreamfyre, parent
	# if dany hatches illyrio's eggs, then they're parent will be dreamfyre
	if = {
		limit = {
			var:dragon_parent = character:dragon_pythax
		}
		set_variable = genned_eggs # Used
	}
}

agot_targaryen_exile_invasion.0301 = {
	type = character_event
	title = agot_targaryen_exile_invasion.0301.t
	desc = agot_targaryen_exile_invasion.0301.desc
	override_icon = {
		reference = "gfx/interface/icons/event_types/type_war.dds"
	}
	theme = war
	left_portrait = {
		character = scope:egg_granter
		animation = toast_goblet
	}
	right_portrait = {
		character = root
		animation = disbelief
	}
	artifact = {
		target = scope:egg_1
		position = lower_left_portrait
	}
	artifact = {
		target = scope:egg_2
		position = lower_right_portrait
	}
	artifact = {
		target = scope:egg_3
		position = lower_center_portrait
	}
	immediate = {
		if = {
			limit = {
				list_size:eggs_to_transfer > 0
			}
			every_in_list = {
				list = eggs_to_transfer
				set_owner = root
				set_variable = {
					name = destined_eggs
					value = yes
				}
				set_variable = {
					name = agot_artifact_cannot_gift
					value = yes
				}
				add_to_list = generated_eggs
			}
		}
		else = {
			agot_spawn_laid_egg = {
				OWNER_SCOPE = root
				AMOUNT_OF_EGGS_TO_SPAWN = 3
				DRAGON_PARENT = character:dragon_pythax
			}
			custom_tooltip = agot_targaryen_exile_invasion.0301.generated_eggs
		}
		random_character_artifact = {
			limit = {
				has_variable = dragon_egg
			}
			set_variable = {
				name = destined_eggs
				value = yes
			}
			set_variable = {
				name = agot_artifact_cannot_gift
				value = yes
			}
			generated_eggs_cleanup_effect = yes
			save_scope_as = egg_1
			add_to_list = generated_eggs
		}
		random_character_artifact = {
			limit = {
				has_variable = dragon_egg
				this != scope:egg_1
			}
			set_variable = {
				name = destined_eggs
				value = yes
			}
			set_variable = {
				name = agot_artifact_cannot_gift
				value = yes
			}
			generated_eggs_cleanup_effect = yes
			save_scope_as = egg_2
			add_to_list = generated_eggs
		}
		random_character_artifact = {
			limit = {
				has_variable = dragon_egg
				this != scope:egg_1
				this != scope:egg_2
			}
			set_variable = {
				name = destined_eggs
				value = yes
			}
			set_variable = {
				name = agot_artifact_cannot_gift
				value = yes
			}
			generated_eggs_cleanup_effect = yes
			save_scope_as = egg_3
			add_to_list = generated_eggs
		}
		if = {
			limit = {
				player_heir.house ?= root.house
			}
			player_heir = { save_scope_as = heir }
		}
	}

	# A wonderful gift
	option = {
		name = agot_targaryen_exile_invasion.0301.a
		custom_tooltip = agot_targaryen_exile_invasion.0301.teaser_eggs
		ai_chance = {
			base = 75
			ai_value_modifier = {
				ai_boldness = 2
				ai_greed = -2
			}
		}
	}


	after = {
		trigger_event = { id = agot_targaryen_exile_invasion.0600 days = 7 }
		hidden_effect = {
			if = {
				limit = {
					scope:egg_granter = {
						has_variable = agot_delete_char
					}
				}
				scope:egg_granter = {
					death = {
						death_reason = death_vanished
					}
				}
			}
		}
	}
}

agot_targaryen_exile_invasion.0305 = {
	type = character_event
	window = agot_dragon_character_event
	title = agot_targaryen_exile_invasion.0305.t
	desc = agot_targaryen_exile_invasion.0305.desc
	theme = dragon
	left_portrait = {
		character = root
		animation = worry
	}
	right_portrait = {
		character = scope:hatcher
		animation = happiness
	}
	lower_center_portrait = {
		character = scope:dragon
		animation = dragon_head
	}
	lower_left_portrait = {
		character = scope:dragon_2
		animation = dragon_head
	}
	lower_right_portrait = {
		character = scope:dragon_3
		animation = dragon_head
	}
	immediate = {}
	option = {
		name = agot_targaryen_exile_invasion.0305.a
	}
}

scripted_trigger right_personality_right_vibes_trigger = {
	OR = {
		ai_has_cautious_personality = yes
		OR = {
			has_trait = diplomat
			has_trait = craven
			has_trait = trusting
		}
	}
	NOR = {
		has_trait = stubborn
		has_trait = paranoid
		global_var:targaryen_exile_title.holder ?= {
			has_trait = paranoid
		}
		global_var:targaryen_exile_title.holder ?= {
			has_trait = stubborn
		}
	}
}

agot_targaryen_exile_invasion.0306 = {
	type = character_event
	window = agot_dragon_character_event
	title = agot_targaryen_exile_invasion.0306.t
	desc = agot_targaryen_exile_invasion.0306.desc
	theme = dragon
	left_portrait = {
		character = root
		animation = worry
	}
	right_portrait = {
		character = scope:hatcher
		animation = happiness
	}
	lower_center_portrait = {
		character = scope:dragon
		animation = dragon_head
	}
	lower_left_portrait = {
		character = scope:dragon_2
		animation = dragon_head
	}
	lower_right_portrait = {
		character = scope:dragon_3
		animation = dragon_head
	}
	immediate = {
		global_var:targaryen_exile_title.holder ?= {
			save_scope_as = targaryen_exile
			random_courtier = {
				limit = {
					has_trait = dragon
					age < 1
					this != scope:dragon
				}
				save_scope_as = dragon_2
			}
			random_courtier = {
				limit = {
					has_trait = dragon
					age < 1
					this != scope:dragon
					this != scope:dragon_2
				}
				save_scope_as = dragon_3
			}
		}
		global_var:targaryen_exile_title.holder.primary_heir ?= {
			save_scope_as = targaryen_exile_heir
		}
		primary_heir ?= {
			save_scope_as = iron_throne_heir
		}
		save_scope_as = iron_throne_holder
	}
	option = {
		name = agot_targaryen_exile_invasion.0306.a
		add_stress = medium_stress_gain
		ai_chance = {
			base = 33
		}
	}
	# Marry IT to TargExile
	option = {
		name = agot_targaryen_exile_invasion.0306.marry_me_to_you
		trigger = {
			right_personality_right_vibes_trigger = yes
			NOR = {
				age > global_var:targaryen_exile_title.holder.age_plus_5
				global_var:targaryen_exile_title.holder.age > root.age_plus_5
			}
			could_marry_character_trigger = { CHARACTER = global_var:targaryen_exile_title.holder }
		}
		save_scope_as = marriage_offer
		scope:targaryen_exile = {
			trigger_event = agot_targaryen_exile_invasion.0307
		}
		ai_chance = {
			base = 33
			ai_value_modifier = {
				ai_rationality = 0.5
				ai_boldness = 0.5
				ai_sociability = 0.5
			}
		}
	}
	# Marry IT Heir to TargExile
	option = {
		name = agot_targaryen_exile_invasion.0306.marry_heir_to_you
		trigger = {
			primary_heir ?= {
				NOR = {
					age > global_var:targaryen_exile_title.holder.age_plus_5
					global_var:targaryen_exile_title.holder.age > this.age_plus_5
				}
				could_marry_character_trigger = { CHARACTER = global_var:targaryen_exile_title.holder }
			}
			right_personality_right_vibes_trigger = yes
		}
		primary_heir = {
			save_scope_as = marriage_offer
		}
		scope:targaryen_exile = {
			trigger_event = agot_targaryen_exile_invasion.0307
		}
		ai_chance = {
			base = 33
			ai_value_modifier = {
				ai_rationality = 0.5
				ai_sociability = 0.5
			}
		}
	}
}

agot_targaryen_exile_invasion.0307 = {
	type = character_event
	title = agot_targaryen_exile_invasion.0307.t
	desc = agot_targaryen_exile_invasion.0307.desc
	theme = realm
	left_portrait = {
		character = root
		animation = thinking
	}
	right_portrait = {
		character = scope:iron_throne_holder
		animation = worry
	}
	lower_center_portrait = {
		trigger = {
			NOT = { scope:marriage_offer ?= scope:iron_throne_holder }
		}
		character = scope:marriage_offer
	}
	immediate = {}
	option = {
		name = agot_targaryen_exile_invasion.0307.a
		ai_chance = {
			base = 80
			ai_value_modifier = {
				ai_vengefulness = 1
				ai_greed = 1
				ai_boldness = 0.75
			}
		}
	}
	option = {
		name = agot_targaryen_exile_invasion.0307.b
		if = {
			limit = {
				exists = betrothed
			}
			if = {
				limit = {
					has_been_promised_grand_wedding = yes
				}
				break_grand_wedding_betrothal_effect = yes
			}
			else = {
				break_betrothal = betrothed
			}
		}
		if = {
			limit = {
				scope:marriage_offer = {
					is_adult = yes
				}
			}
			marry = scope:marriage_offer
		}
		else = {
			create_betrothal = scope:marriage_offer
		}
		hidden_effect = {
			random_owned_story = {
				limit = {
					story_type = story_agot_targaryen_exile_invasion
				}
				end_story = yes
			}
		}
		agot_invasions_move_to_new_court = { NEW_LIEGE = scope:iron_throne_holder }
		ai_chance = {
			base = 20
			ai_value_modifier = {
				ai_compassion = 0.5
				ai_sociability = 0.5
			}
		}
	}
}

agot_targaryen_exile_invasion.0400 = {
	type = character_event
	title = agot_targaryen_exile_invasion.0400.t
	desc = agot_targaryen_exile_invasion.0400.desc
	override_background = {
		reference = battlefield
	}
	theme = war
	left_portrait = {
		character = root
		animation = marshal
	}
	right_portrait = {
		character = scope:iron_throne_holder
		animation = rage
	}
	trigger = {
		exists = title:e_the_iron_throne.holder
		is_imprisoned = no
		is_at_war = no
		NOR = {
			liege = title:e_the_iron_throne.holder
			root = {
				OR = {
					is_allied_to = prev
					has_strong_hook = prev
					has_relation_lover = prev
					has_relation_friend = prev
					has_truce = prev
				}
			}
		}
	}
	immediate = {
		title:e_the_iron_throne.holder = {
			save_scope_as = iron_throne_holder
		}
		hidden_effect = {
			traditional_targaryen_loyalist_alliance_effect = yes
			agot_invasions_restore_or_grant_it_claims = yes
		}
		spawn_army = {
			name = targaryen_follower_spawned_army_name
			men_at_arms = {
				type = light_footmen # 1250
				stacks = 12
			}
			men_at_arms = {
				type = pikemen_unit # 1250
				stacks = 12
			}
			men_at_arms = {
				type = armored_footmen # 1000
				stacks = 10
			}
			men_at_arms = {
				type = bowmen # 100
				stacks = 3
			}
			men_at_arms = {
				type = longbowmen # 100
				stacks = 3
			}
			men_at_arms = {
				type = light_horsemen # 1150
				stacks = 12
			}
			men_at_arms = {
				type = armored_horsemen # 250
				stacks = 5
			}
			men_at_arms = {
				type = trebuchet # 50
				stacks = 5
			}
			location = root.location
			origin = root.location
			inheritable = no
		}
	}
	option = {
		name = agot_targaryen_exile_invasion.0400.a
		agot_invade_the_it_but_without_crashing = yes
		if = {
			limit = {
				NOT = {
					has_variable = current_dragon
				}
				any_relation = {
					type = agot_dragon
				}
			}
			random_relation = {
				type = agot_dragon
				limit = {
					has_trait = dragon
				}
				save_scope_as = dragon
				agot_tame_dragon = {
					TAMER = root
					DRAGON = scope:dragon
				}
			}
		}
		start_war = {
			casus_belli = agot_targaryen_exile_invasion_war_cb
			claimant = root
			target = title:e_the_iron_throne.holder
			target_title = title:e_the_iron_throne
			target_title = title:k_the_crownlands
			target_title = title:d_kings_landing
			target_title = title:c_kings_landing
			target_title = title:k_dragonstone
			target_title = title:d_dragonstone
			target_title = title:c_dragonstone
		}
		ai_chance = {
			base = 75
		}
	}
	option = {
		name = agot_targaryen_exile_invasion.0400.b
		trigger = {
			is_ai = no
		}
		custom_tooltip = agot_targaryen_exile_invasion.0400.b_tt
		custom_tooltip = agot_targaryen_exile_invasion.0400.b_tt_patrons
		random_owned_story = {
			limit = {
				story_type = story_agot_targaryen_exile_invasion
			}
			set_variable = {
				name = story_cycle_status
				value = flag:exile_invasion_player_opted_to_wait
			}
		}
	}
	option = {
		name = agot_targaryen_exile_invasion.0400.c # Send a message to Faegon
		trigger = {
			title:e_the_iron_throne.holder = {
				has_variable = is_faegon
			}
		}
		trigger_event = agot_targaryen_exile_invasion.0410
		ai_chance = {
			base = 25
		}
	}
}
agot_targaryen_exile_invasion.0401 = {
	type = character_event
	title = agot_targaryen_exile_invasion.0401.t
	desc = agot_targaryen_exile_invasion.0401.desc
	theme = war
	override_background = {
		reference = agot_iron_throne
	}
	left_portrait = {
		character = root
		animation = war_over_win
	}
	right_portrait = {
		character = scope:defender
		trigger = {
			exists = scope:defender
		}
		animation = prisondungeon
	}
	immediate = {
		house = {
			if = {
				limit = {
					house_head = {
						is_playable_character = no
					}
				}
				set_house_head = root
			}
		}
		agot_invaders_dragonstone_transfer_effect = {
			RECIPIENT = root
		}
	}
	option = {
		name = agot_targaryen_exile_invasion.0401.a
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_any_nickname = no
					has_bad_nickname = yes
				}
			}
		}
	}
	option = {
		name = agot_targaryen_exile_invasion.0401.b
		ai_chance = {
			base = 0
			modifier = {
				add = 100
				OR = {
					has_any_nickname = no
					has_bad_nickname = yes
				}
			}
		}
		give_nickname = nick_the_restorer
	}
	after = {
		custom_tooltip = agot_targaryen_exile_invasion.0401.tt
		hidden_effect = {
			agot_purge_and_convert_targ_and_blackfyre_scripted_alliances = { VARIABLE_NAME = targ_loyalist_story_content_ally }
		}
		if = {
			limit = {
				scope:defender = {
					is_character_baratheon_2 = yes
				}
			}
			trigger_event = agot_targaryen_exile_invasion.0402
		}
		hidden_effect = {
			trigger_event = {
				id = agot_targaryen_exile_invasion.0403
				days = 7
			}
			every_in_global_list = {
				variable = targaryen_exiles_destined_dragons
				set_location = root.capital_province
			}
		}
	}
}
agot_targaryen_exile_invasion.0402 = {
	type = character_event
	title = agot_targaryen_exile_invasion.0402.t
	desc = agot_targaryen_exile_invasion.0402.desc
	theme = war
	override_background = {
		reference = agot_iron_throne
	}
	left_portrait = {
		character = root
		animation = war_over_win
	}
	right_portrait = {
		character = scope:defender
		trigger = {
			exists = scope:defender
		}
		animation = prisondungeon
	}
	immediate = {}
	option = {
		name = agot_targaryen_exile_invasion.0402.a
		scope:defender = {
			create_title_and_vassal_change = {
				type = granted
				save_scope_as = change
				add_claim_on_loss = no
			}
			every_held_title = {
				limit = {
					tier > tier_barony
				}
				change_title_holder_include_vassals = {
					holder = root
					change = scope:change
				}
			}
			death = {
				death_reason = death_execution
				killer = root
			}
			resolve_title_and_vassal_change = scope:change
		}
		ai_chance = {
			base = 80
		}
	}
	option = {
		name = agot_targaryen_exile_invasion.0402.b
		ai_chance = {
			base = 20 # They still will use the MW punishment system
		}
	}
}
agot_targaryen_exile_invasion.0403 = {
	type = character_event
	hidden = yes
	immediate = {
		if = {
			limit = {
				has_royal_court = yes
			}
			set_current_court_grandeur = 100
		}
	}
}
agot_targaryen_exile_invasion.0500 = {
	type = character_event
	title = agot_targaryen_exile_invasion.0500.t
	desc = agot_targaryen_exile_invasion.0500.desc
	override_icon = {
		reference = "gfx/interface/icons/event_types/type_war.dds"
	}
	theme = war
	left_portrait = {
		character = root
		animation = thinking
	}
	right_portrait = {
		character = scope:royal_bastard_monarch
		animation = celebrate_sword
	}
	immediate = {}
	# Go Home to Westeros
	option = {
		name = agot_targaryen_exile_invasion.0500.a
		if = {
			limit = {
				is_ai = no
			}
			trigger_event = agot_targaryen_exile_invasion.0501 # Handler for swapping to RB for humans
		}
		else = {
			agot_invasions_move_to_new_court = { NEW_LIEGE = scope:royal_bastard_monarch }
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 1
				OR = {
					has_trait = craven
					has_trait = family_first
					has_trait = trusting
				}
			}
			modifier = {
				factor = 3
				has_targaryen_exile_story = no
			}
		}
	}
	# Join War
	option = {
		name = agot_targaryen_exile_invasion.0500.b
		scope:royal_bastard_monarch = {
			set_variable = {
				name = targaryen_exile_reaction
				value = flag:targaryen_exiles_joined_me
			}
			every_character_war = {
				limit = {
					primary_defender = title:e_the_iron_throne.holder
				}
				add_attacker = root
			}
		}
		add_realm_law = camp_purpose_wanderers
		primary_title = {
			set_title_name = d_laamp_targaryen_host_generic
		}
		if = {
			limit = {
				has_targaryen_exile_story = yes
			}
			custom_tooltip = agot_targaryen_exile_invasion.0500.b_tt
			hidden_effect = {
				random_owned_story = {
					limit = {
						story_type = story_agot_targaryen_exile_invasion
					}
					end_story = yes
				}
			}
		}
		ai_chance = {
			base = 15
			ai_value_modifier = {
				ai_boldness = 0.5
				ai_vengefulness = 0.5
			}
		}
	}
	# Who?
	option = {
		name = agot_targaryen_exile_invasion.0500.c
		scope:royal_bastard_monarch = {
			set_variable = {
				name = targaryen_exile_reaction
				value = flag:targaryen_exiles_rejected_me
			}
		}
		ai_chance = {
			base = 75
			ai_value_modifier = {
				ai_greed = 0.5
			}
		}
	}
}

agot_targaryen_exile_invasion.0410 = {
	type = character_event
	title = agot_targaryen_exile_invasion.0410.t
	desc = agot_targaryen_exile_invasion.0410.desc
	override_background = {
		reference = battlefield
	}
	theme = war
	left_portrait = {
		character = root
		animation = marshal
	}
	right_portrait = {
		character = scope:iron_throne_holder
		animation = chancellor
	}
	immediate = {
		save_scope_as = targaryen_invader
	}
	option = {
		name = agot_targaryen_exile_invasion.0410.a # The Throne, completely
		set_variable = demanded_throne_outright
		ai_chance = {
			base = 25
		}
	}
	option = {
		name = agot_targaryen_exile_invasion.0410.b # The Throne, but you can marry me
		trigger = {
			title:e_the_iron_throne.holder ?= {
				AND = {
					sex_opposite_of = root
					is_married = no
				}
			}
		}
		set_variable = demanded_throne_with_marriage
		ai_chance = {
			base = 75
		}
	}
	after = {
		scope:iron_throne_holder = {
			trigger_event = agot_targaryen_exile_invasion.0411
		}
	}
}
agot_targaryen_exile_invasion.0411 = {
	type = character_event
	title = agot_targaryen_exile_invasion.0411.t
	desc = {
		desc = agot_targaryen_exile_invasion.0411.desc
		first_valid = {
			triggered_desc = {
				trigger = { scope:targaryen_invader = { has_variable = demanded_throne_outright } }
				desc = agot_targaryen_exile_invasion.0411.desc_throne_demanded_outright
			}
			triggered_desc = {
				trigger = { scope:targaryen_invader = { has_variable = demanded_throne_with_marriage } }
				desc = agot_targaryen_exile_invasion.0411.desc_throne_demanded_with_marriage_offer
			}
		}
	}
	override_background = {
		reference = battlefield
	}
	theme = war
	left_portrait = {
		character = root
		animation = marshal
	}
	right_portrait = {
		character = scope:targaryen_invader
		animation = chancellor
	}
	immediate = {}
	option = {
		name = agot_targaryen_exile_invasion.0411.a # Surrender the Throne Completely
		trigger = { scope:targaryen_invader = { has_variable = demanded_throne_outright } }
		create_title_and_vassal_change = {
			type = granted
			save_scope_as = change
			add_claim_on_loss = no
		}
		every_held_title = {
			change_title_holder_include_vassals = {
				holder = scope:targaryen_invader
				change = scope:change
			}
		}
		resolve_title_and_vassal_change = scope:change
		if = {
			limit = {
				is_ai = no
			}
			set_player_character = scope:targaryen_invader
		}
		add_internal_flag = special
		ai_chance = {
			base = 10
		}
	}
	option = {
		name = agot_targaryen_exile_invasion.0411.b # Surrender the Throne and Marry
		trigger = {
			scope:targaryen_invader = { has_variable = demanded_throne_with_marriage }
		}
		# Marry Them
		scope:targaryen_invader = {
			if = {
				limit = {
					is_betrothed = yes
				}
				if = {
					limit = {
						has_been_promised_grand_wedding = yes
					}
					break_grand_wedding_betrothal_effect = yes
				}
				else = {
					break_betrothal = betrothed
				}
			}
		}
		if = {
			limit = {
				is_betrothed = yes
			}
			if = {
				limit = {
					has_been_promised_grand_wedding = yes
				}
				break_grand_wedding_betrothal_effect = yes
			}
			else = {
				break_betrothal = betrothed
			}
		}
		if = {
			limit = {
				scope:targaryen_invader = { is_adult = yes }
			}
			if = {
				limit = {
					scope:targaryen_invader = { is_female = yes }
				}
				marry_matrilineal = scope:targaryen_invader
			}
			else = {
				marry = scope:targaryen_invader
			}
		}
		else = {
			if = {
				limit = {
					scope:targaryen_invader = { is_female = yes }
				}
				create_betrothal_matrilineal = scope:targaryen_invader
			}
			else = {
				create_betrothal = scope:targaryen_invader
			}
		}
		if = {
			limit = {
				var:identity = flag:open_blackfyre
				house:house_Blackfyre = {
					has_house_modifier = divided_dynasty_house_modifier
				}
			}
			house:house_Blackfyre = {
				remove_house_modifier = divided_dynasty_house_modifier
			}
		}
		create_title_and_vassal_change = {
			type = granted
			save_scope_as = change
			add_claim_on_loss = no
		}
		every_held_title = {
			change_title_holder_include_vassals = {
				holder = scope:targaryen_invader
				change = scope:change
			}
		}
		resolve_title_and_vassal_change = scope:change
		if = {
			limit = {
				is_ai = no
			}
			set_player_character = scope:targaryen_invader
		}
		add_internal_flag = special
		ai_chance = {
			base = 10
		}
	}
	option = {
		name = agot_targaryen_exile_invasion.0411.c # Counteroffer Give them Dragonstone
		trigger = {
			has_title = title:c_dragonstone
		}
		show_as_tooltip = {
			create_title_and_vassal_change = {
				type = granted
				save_scope_as = change
				add_claim_on_loss = no
			}
			every_held_title = {
				limit = {
					OR = {
						this = title:k_dragonstone
						this = title:d_dragonstone
						this = title:c_dragonstone
					}
				}
				change_title_holder_include_vassals = {
					holder = scope:targaryen_invader
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
		}
		add_internal_flag = special
		scope:targaryen_invader = {
			trigger_event = agot_targaryen_exile_invasion.0412
		}
		ai_chance = {
			base = 10
		}
	}
	option = {
		name = agot_targaryen_exile_invasion.0411.d # Reject all demands
		scope:targaryen_invader = {
			trigger_event = agot_targaryen_exile_invasion.0413
		}
		ai_chance = {
			base = 70
		}
	}
	after = {
		scope:targaryen_invader = {
			remove_variable = demanded_throne_outright
			remove_variable = demanded_throne_with_marriage
		}
	}
}
agot_targaryen_exile_invasion.0412 = {
	type = character_event
	title = agot_targaryen_exile_invasion.0412.t
	desc = agot_targaryen_exile_invasion.0412.desc
	override_background = {
		reference = battlefield
	}
	theme = war
	left_portrait = {
		character = root
		animation = marshal
	}
	right_portrait = {
		character = scope:iron_throne_holder
		animation = chancellor
	}
	immediate = {}
	option = {
		name = agot_targaryen_exile_invasion.0412.a
		scope:iron_throne_holder = {
			create_title_and_vassal_change = {
				type = granted
				save_scope_as = change
				add_claim_on_loss = no
			}
			every_held_title = {
				limit = {
					OR = {
						this = title:k_dragonstone
						this = title:d_dragonstone
						this = title:c_dragonstone
					}
				}
				change_title_holder_include_vassals = {
					holder = scope:targaryen_invader
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
		}
		ai_chance = {
			base = 20
		}
	}
	option = {
		name = agot_targaryen_exile_invasion.0412.b
		if = {
			limit = {
				NOT = {
					has_variable = current_dragon
				}
				any_relation = {
					type = agot_dragon
				}
			}
			random_relation = {
				type = agot_dragon
				limit = {
					has_trait = dragon
				}
				save_scope_as = dragon
				agot_tame_dragon = {
					TAMER = root
					DRAGON = scope:dragon
				}
			}
		}
		start_war = {
			casus_belli = agot_targaryen_exile_invasion_war_cb
			claimant = root
			target = title:e_the_iron_throne.holder
			target_title = title:e_the_iron_throne
			target_title = title:k_the_crownlands
			target_title = title:d_kings_landing
			target_title = title:c_kings_landing
			target_title = title:k_dragonstone
			target_title = title:d_dragonstone
			target_title = title:c_dragonstone
		}
		ai_chance = {
			base = 80
		}
	}
}
agot_targaryen_exile_invasion.0413 = {
	type = character_event
	title = agot_targaryen_exile_invasion.0413.t
	desc = agot_targaryen_exile_invasion.0413.desc
	override_background = {
		reference = battlefield
	}
	theme = war
	left_portrait = {
		character = root
		animation = marshal
	}
	right_portrait = {
		character = scope:iron_throne_holder
		animation = rage
	}
	immediate = {}
	option = {
		name = agot_targaryen_exile_invasion.0413.a
		agot_invade_the_it_but_without_crashing = yes
		if = {
			limit = {
				NOT = {
					has_variable = current_dragon
				}
				any_relation = {
					type = agot_dragon
				}
			}
			random_relation = {
				type = agot_dragon
				limit = {
					has_trait = dragon
				}
				save_scope_as = dragon
				agot_tame_dragon = {
					TAMER = root
					DRAGON = scope:dragon
				}
			}
		}
		start_war = {
			casus_belli = agot_targaryen_exile_invasion_war_cb
			claimant = root
			target = title:e_the_iron_throne.holder
			target_title = title:e_the_iron_throne
			target_title = title:k_the_crownlands
			target_title = title:d_kings_landing
			target_title = title:c_kings_landing
			target_title = title:k_dragonstone
			target_title = title:d_dragonstone
			target_title = title:c_dragonstone
		}
	}
}

agot_targaryen_exile_invasion.0501 = {
	type = character_event
	title = agot_targaryen_exile_invasion.0501.t
	desc = agot_targaryen_exile_invasion.0501.desc
	override_icon = {
		reference = "gfx/interface/icons/event_types/type_war.dds"
	}
	theme = war
	left_portrait = {
		character = root
		animation = thinking
	}
	right_portrait = {
		character = scope:royal_bastard_monarch
		animation = celebrate_sword
	}
	immediate = {}
	# Go Home to Westeros
	option = {
		name = agot_targaryen_exile_invasion.0501.a
		trigger = {
			has_multiple_players = no
		}
		add_internal_flag = special
		agot_invasions_move_to_new_court = { NEW_LIEGE = scope:royal_bastard_monarch }
	}
	# We will support your claim - but I want to remain a laamp
	option = {
		name = agot_targaryen_exile_invasion.0501.b
		add_realm_law = camp_purpose_wanderers
		primary_title = {
			set_title_name = d_laamp_targaryen_host_generic
		}
	}
}

agot_targaryen_exile_invasion.0502 = {
	type = character_event
	title = agot_targaryen_exile_invasion.0502.t
	desc = agot_targaryen_exile_invasion.0502.desc
	override_icon = {
		reference = "gfx/interface/icons/event_types/type_war.dds"
	}
	theme = war
	left_portrait = {
		character = root
		animation = thinking
	}
	right_portrait = {
		character = scope:royal_bastard_monarch
		animation = celebrate_sword
	}
	immediate = {}
	# Go Home to Westeros
	option = {
		name = agot_targaryen_exile_invasion.0502.a
		add_internal_flag = special
		agot_invasions_move_to_new_court = { NEW_LIEGE = scope:royal_bastard_monarch }
		trigger = {
			has_multiple_players = no
		}
		ai_chance = {
			base = 45
			modifier = {
				factor = 1
				OR = {
					has_trait = craven
					has_trait = family_first
					has_trait = trusting
				}
			}
			modifier = {
				factor = 3
				has_targaryen_exile_story = yes
			}
		}
	}
	# If MP is enabled, and RB is a human player
	option = {
		name = agot_targaryen_exile_invasion.0502.mp_enabled
		trigger = {
			has_multiple_players = yes
			scope:royal_bastard_monarch = {
				is_ai = no
			}
		}
		if = {
			limit = {
				has_targaryen_exile_story = yes
			}
			hidden_effect = {
				random_owned_story = {
					limit = {
						story_type = story_agot_targaryen_exile_invasion
					}
					end_story = yes
				}
			}
		}
		add_realm_law = camp_purpose_wanderers
		if = {
			limit = {
				NOT = {
					is_allied_to = scope:royal_bastard_monarch
				}
			}
			create_alliance = {
				target = scope:royal_bastard_monarch
				allied_through_owner = root
				allied_through_target = scope:royal_bastard_monarch
			}
			scope:royal_bastard_monarch = {
				add_opinion = {
					target = root
					modifier = event_negotiated_alliance_opinion
				}
			}
		}
	}
	# Who?
	option = {
		name = agot_targaryen_exile_invasion.0502.b
		ai_chance = {
			base = 55
			ai_value_modifier = {
				ai_greed = 1
				ai_vengefulness = 0.5
			}
		}
	}
	after = {
		scope:royal_bastard_monarch = {
			remove_variable = targaryen_exile_reaction
		}
	}
}

agot_targaryen_exile_invasion.0600 = {
	type = character_event
	title = agot_targaryen_exile_invasion.0600.t
	desc = agot_targaryen_exile_invasion.0600.desc
	override_icon = {
		reference = "gfx/interface/icons/event_types/type_war.dds"
	}
	theme = dragon
	left_portrait = root
	artifact = {
		target = scope:egg_1
		position = lower_left_portrait
	}
	artifact = {
		target = scope:egg_2
		position = lower_right_portrait
	}
	artifact = {
		target = scope:egg_3
		position = lower_center_portrait
	}
	immediate = {}

	option = {
		name = agot_targaryen_exile_invasion.0600.a
		ai_chance = {
			base = 100
		}
		create_character = {
			employer = root
			faith = title:b_mummer_lane.faith
			culture = title:b_mummer_lane.culture
			age = { 25 35 }
			random_traits_list = {
				count = 1
				education_learning_1 = {}
				education_learning_2 = {}
				education_learning_3 = {}
				education_learning_4 = {}
			}
			dynasty = generate
			random_traits = yes
			gender_female_chance = 50
			learning = {
				min_template_decent_skill
				max_template_decent_skill
			}
			save_scope_as = guide
		}
		custom_tooltip = agot_targaryen_exile_invasion.0600.a_tt
		trigger_event = { id = agot_targaryen_exile_invasion.0601 days = 1 }
		stress_impact = {
			paranoid = medium_stress_impact_gain
			ambitious = medium_stress_impact_loss
		}
	}

	# This refuses the eggs - removed for now
	#option = {
	#	name = agot_targaryen_exile_invasion.0600.b
	#	ai_chance = {
	#		base = 0
	#	}
	#	custom_tooltip = agot_targaryen_exile_invasion.0600.b_tt
	#	stress_impact = {
	#		paranoid = medium_stress_impact_loss
	#		ambitious = medium_stress_impact_gain
	#	}
	#}
}

agot_targaryen_exile_invasion.0601 = {
	type = character_event
	title = agot_targaryen_exile_invasion.0601.t
	artifact = {
		target = scope:egg_1
		position = lower_left_portrait
	}
	artifact = {
		target = scope:egg_2
		position = lower_right_portrait
	}
	artifact = {
		target = scope:egg_3
		position = lower_center_portrait
	}
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					exists = scope:egg_owner
				}
				desc = agot_targaryen_exile_invasion.0601.desc_took_eggs_away
			}
			triggered_desc = {
				trigger = {
					NOT = { exists = scope:egg_owner }
				}
				desc = agot_targaryen_exile_invasion.0601.desc
			}
		}
	}
	override_background = {
		reference = agot_dragonpit
	}
	theme = dragon
	left_portrait = {
		character = root
		animation = worry
	}
	right_portrait = {
		character = scope:guide
		animation = reading
	}
	immediate = {
		every_in_list = {
			list = generated_eggs
			limit = {
				has_variable = destined_eggs
			}
			if = {
				limit = {
					this.artifact_owner != root
				}
				this.artifact_owner = {
					save_scope_as = egg_owner
				}
			}
		}
	}

	option = {
		name = agot_targaryen_exile_invasion.0601.a
		trigger_event = { id = agot_targaryen_exile_invasion.0602 days = 1 }
		pay_short_term_gold = {
			target = scope:guide
			gold = major_gold_value
		}
		scope:egg_owner ?= {
			add_opinion = {
				target = root
				modifier = stole_artifact_from_me
			}
		}
		stress_impact = {
			paranoid = medium_stress_impact_gain
		}
	}
}

scripted_effect dragon_hatching_chance_effect = {
	hidden_effect = {
		if = {
			limit = {
				has_game_rule = targaryen_exile_guaranteed
			}
			set_variable = {
				name = hatching_ceremony
				value = flag:basic_success
			}
		}
		else_if = {
			limit = {
				has_game_rule = targaryen_exile_not
			}
			set_variable = {
				name = hatching_ceremony
				value = flag:failure
			}
		}
		else = {
			random_list = {
				77 = { # Failure
					set_variable = {
						name = hatching_ceremony
						value = flag:failure
					}
					random_owned_story = {
						limit = { story_type = story_agot_targaryen_exile_invasion }
						set_variable = {
							name = story_cycle_status
							value = flag:hatching_ceremony_failed
						}
					}
				}
				23 = { # Basic Success
					set_variable = {
						name = hatching_ceremony
						value = flag:basic_success
					}
					modifier = {
						AND = {
							any_owned_story = {
								story_type = story_agot_targaryen_exile_invasion
								var:human_exiles_bonuses ?= yes
							}
							any_in_global_list = {
								variable = living_dragons
								exists = this
							}
						}
						add = 72
					}
				}
				15 = { # Special Success (AKA One of the Four Options)
					set_variable = {
						name = hatching_ceremony
						value = flag:special_option_enabled
					}
					modifier = {
						any_owned_story = {
							story_type = story_agot_targaryen_exile_invasion
							var:ai_bonuses ?= yes
						}
						add = 95
					}
					modifier = {
						scope:sacrifice ?= {
							any_ancestor = { # kingsblood
								even_if_dead = yes
								highest_held_title_tier = tier_empire
							}
						}
						add = 5
					}
				}
			}
		}
	}
}

agot_targaryen_exile_invasion.0602 = {
	type = character_event
	title = agot_targaryen_exile_invasion.0602.t
	desc = agot_targaryen_exile_invasion.0602.desc
	artifact = {
		target = scope:egg_1
		position = lower_left_portrait
	}
	artifact = {
		target = scope:egg_2
		position = lower_right_portrait
	}
	artifact = {
		target = scope:egg_3
		position = lower_center_portrait
	}
	override_background = {
		reference = wilderness
	}
	theme = dragon
	left_portrait = {
		character = root
		animation = thinking
	}
	right_portrait = {
		character = scope:guide
		animation = personality_zealous
	}
	immediate = {
		if = {
			limit = { player_heir ?= { house = root.house } }
			root.player_heir = { save_scope_as = heir }
		}
	}

	option = {
		name = agot_targaryen_exile_invasion.0602.a
		set_variable = {
			name = status_602
			value = flag:self_blood_donor
		}
		trigger_event = agot_targaryen_exile_invasion.0610
		stress_impact = {
			base = minor_stress_impact_gain
			craven = medium_stress_impact_gain
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = -0.5
				OR = {
					health <= poor_health
					has_trait = wounded_2
					has_trait = wounded_3
				}
			}
		}
	}
	option = {
		name = agot_targaryen_exile_invasion.0602.b
		trigger = {
			player_heir ?= {
				house = root.house
			}
		}
		set_variable = {
			name = status_602
			value = flag:heir_blood_donor
		}
		root.player_heir = { save_scope_as = heir_blood_donor }
		trigger_event = agot_targaryen_exile_invasion.0610
		stress_impact = {
			base = minor_stress_impact_gain
			family_first = minor_stress_impact_gain
			compassionate = minor_stress_impact_gain
			sadistic = major_stress_impact_loss
		}
		ai_chance = {
			base = 25
			modifier = {
				scope:egg_owner ?= player_heir
				factor = 10
			}
			ai_value_modifier = {
				ai_greed = 0.5
			}
		}
	}
	option = {
		name = agot_targaryen_exile_invasion.0602.c
		trigger = {
			exists = root.player_heir
		}
		set_variable = {
			name = status_602
			value = flag:heir_sacrifice
		}
		root.player_heir = {
			save_scope_as = sacrifice
		}
		trigger_event = agot_targaryen_exile_invasion.0610
		stress_impact = {
			base = minor_stress_impact_gain
			family_first = medium_stress_impact_gain
			compassionate = medium_stress_impact_gain
			sadistic = major_stress_impact_loss
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_rationality = -0.5
				ai_greed = 0.5
			}
		}
	}
	option = {
		name = agot_targaryen_exile_invasion.0602.d
		trigger = {
			any_courtier = {
				is_human = yes
				this != scope:guide
				count > 0
			}
		}
		set_variable = {
			name = status_602
			value = flag:sacrifice
		}
		trigger_event = agot_targaryen_exile_invasion.0603
		stress_impact = {
			base = minor_stress_impact_gain
			gregarious = medium_stress_impact_gain
			compassionate = medium_stress_impact_gain
			sadistic = major_stress_impact_loss
		}
		ai_chance = {
			base = 25
			ai_value_modifier = {
				ai_rationality = 0.5
				ai_greed = -0.5
			}
		}
	}
}

agot_targaryen_exile_invasion.0603 = {
	type = character_event
	title = agot_targaryen_exile_invasion.0603.t
	desc = agot_targaryen_exile_invasion.0603.desc
	widget = {
		is_shown = {
			is_ai = no
		}
		gui = "agot_character_selection_two_options"
		container = "custom_widgets_container"
	}
	override_background = {
		reference = wilderness
	}
	theme = dragon
	left_portrait = {
		character = root
		animation = thinking
	}
	immediate = {
		if = {
			limit = {
				is_ai = yes
			}
			random_courtier = {
				limit = {
					is_human = yes
					this != scope:guide
				}
				save_scope_as = sacrifice
			}
		}
		else = {
			every_courtier = {
				limit = {
					is_human = yes
					NOT = {
						root.player_heir = this
					}
					this != scope:guide
				}
				root = {
					add_to_variable_list = {
						name = possible_characters
						target = prev
					}
				}
			}
			ordered_in_list = {
				variable = possible_characters
				root = { set_variable = { name = si_selected_character value = prev } }
				save_scope_as = sacrifice
			}
		}
	}

	option = {
		name = agot_targaryen_exile_invasion.0603.a
		var:si_selected_character ?= {
			save_scope_as = sacrifice
		}
		trigger_event = agot_targaryen_exile_invasion.0610
	}
	after = {
		if = {
			limit = {
				has_variable = si_selected_character
			}
			remove_variable = si_selected_character
		}
		scope:sacrifice ?= {
			if = {
				limit = {
					is_alive = yes
				}
				if = {
					limit = {
						has_variable = si_selecting_character
					}
					remove_variable = si_selecting_character
				}
			}
		}
		if = {
			limit = {
				has_variable_list = possible_characters
			}
			clear_variable_list = possible_characters
		}
	}
}

scripted_effect return_canon_dragons_to_court = {
	hidden_effect = {
		scope:dragon = {
			# The agot_set_as_owned_dragon effect throws errors here
			remove_trait = dragon_physique_good_3
			add_character_flag = owned_dragon
			set_employer = root
			return_to_court = yes
			if = {
				limit = {
					any_in_list = {
						list = generated_eggs
						has_variable = genned_eggs
					}
				}
				set_mother = character:dragon_pythax
			}
		}
	}
}

scripted_trigger has_good_genetic_trait = {
	OR = {
		has_trait = dragon_physique_good_1
		has_trait = dragon_physique_good_2
		has_trait = dragon_physique_good_3
		has_trait = dragon_swift
		has_trait = dragon_majestic
		has_trait = dragon_fertile
	}
}

scripted_trigger hatching_ceremony_succeeded = {
	OR = {
		var:hatching_ceremony = flag:basic_success
		var:hatching_ceremony = flag:special_option_enabled
	}
}

agot_targaryen_exile_invasion.0604 = {
	type = character_event
	title = agot_targaryen_exile_invasion.0604.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					hatching_ceremony_succeeded = yes
					var:status_602 ?= flag:self_blood_donor
				}
				desc = agot_targaryen_exile_invasion.0604.desc_self
			}
			triggered_desc = {
				trigger = {
					var:hatching_ceremony = flag:failure
					var:status_602 ?= flag:self_blood_donor
				}
				desc = agot_targaryen_exile_invasion.0604.desc_self_fail
			}
			triggered_desc = {
				trigger = {
					hatching_ceremony_succeeded = yes
					OR = {
						var:status_602 ?= flag:sacrifice
						var:status_602 ?= flag:heir_sacrifice
					}
				}
				desc = agot_targaryen_exile_invasion.0604.desc_sacrifice
			}
			triggered_desc = {
				trigger = {
					var:hatching_ceremony = flag:failure
					OR = {
						var:status_602 ?= flag:sacrifice
						var:status_602 ?= flag:heir_sacrifice
					}
				}
				desc = agot_targaryen_exile_invasion.0604.desc_sacrifice_fail
			}
			triggered_desc = {
				trigger = {
					hatching_ceremony_succeeded = yes
					var:status_602 ?= flag:heir_blood_donor
				}
				desc = agot_targaryen_exile_invasion.0604.desc_blood_donation
			}
			triggered_desc = {
				trigger = {
					var:hatching_ceremony = flag:failure
					var:status_602 ?= flag:heir_blood_donor
				}
				desc = agot_targaryen_exile_invasion.0604.desc_blood_donation_fail
			}
		}
	}
	override_background = {
		reference = wilderness
	}
	override_effect_2d = {
		reference = smoke
	}
	theme = dragon
	left_portrait = {
		character = root
		animation = disbelief
	}
	right_portrait = {
		character = scope:guide
		animation = stress
	}
	lower_left_portrait = {
		trigger = {
			exists = scope:dragon_1
		}
		character = scope:dragon_1
	}
	lower_center_portrait = {
		trigger = {
			OR = {
				exists = scope:dragon_2
				exists = scope:sacrifice
				exists = scope:heir_blood_donor
			}
		}
		character = scope:center_portrait_0604
	}
	lower_right_portrait = {
		trigger = {
			exists = scope:dragon_3
		}
		character = scope:dragon_3
	}
	immediate = {
		# Reactions to ceremony options
		if = {
			limit = {
				exists = scope:heir_blood_donor
			}
			scope:heir_blood_donor = {
				increase_wounds_effect = { REASON = burned }
			}
			scope:heir_blood_donor = {
				add_opinion = {
					target = root
					modifier = agot_hurt_me_for_a_ritual
				}
			}
		}
		else_if = {
			limit = {
				var:status_602 = flag:self_blood_donor
			}
			increase_wounds_effect = { REASON = burned }
		}
		if = {
			limit = {
				exists = scope:sacrifice
			}
			scope:sacrifice = {
				death = {
					death_reason = death_sacrificed
					killer = root
				}
			}
			add_trait = murderer
			add_kinslayer_trait_or_nothing_effect = { VICTIM = scope:sacrifice }
			every_courtier = {
				limit = {
					this != scope:guide
					this != scope:sacrifice
				}
				add_opinion = {
					target = root
					modifier = agot_sacrificed_member_of_court
				}
			}
		}
		# Handle Dragon Spawning
		if = {
			limit = {
				hatching_ceremony_succeeded = yes
			}
			if = {
				limit = {
					has_global_variable = no_dany_eggs
					agot_canon_dragons_enabled = yes
					OR = {
						scope:heir_blood_donor ?= {
							is_character_targaryen_9 = yes
						}
						is_character_targaryen_9 = yes
					}
				}
				agot_spawn_drogon_effect = yes
				return_canon_dragons_to_court = yes
				clear_saved_scope = dragon
				agot_spawn_viserion_effect = yes
				return_canon_dragons_to_court = yes
				clear_saved_scope = dragon
				agot_spawn_rhaegal_effect = yes
				return_canon_dragons_to_court = yes
				every_in_list = {
					list = generated_eggs
					limit = {
						has_variable = destined_eggs
					}
					save_scope_as = egg
					custom_tooltip = {
						text = agot_dragon_hatched_from_egg_effect_tt
						agot_remove_dragon_egg = { EGG = this }
					}
				}
				if = {
					limit = {
						scope:heir_blood_donor ?= {
							NOT = {
								has_character_flag = hatched_canon_dragon
							}
						}
					}
					scope:heir_blood_donor ?= {
						add_character_flag = hatched_canon_dragon
					}
				}
				else_if = {
					limit = {
						is_character_targaryen_9 = yes
						NOT = {
							has_character_flag = hatched_canon_dragon
						}
					}
					add_character_flag = hatched_canon_dragon
				}
			}
			else = {
				every_in_list = {
					list = generated_eggs
					limit = {
						has_variable = destined_eggs
					}
					agot_spawn_owned_hatchling_from_egg_effect = {
						OWNER = root EGG = this
					}
				}
			}
			# Dragons have spawned - now need to grab the dragon_X scopes
			every_courtier = {
				limit = {
					has_trait = dragon
					age <= 1
				}
				if = {
					limit = {
						NOT = { exists = scope:dragon_1 }
						this != scope:dragon_2
						this != scope:dragon_3
					}
					save_scope_as = dragon_1
				}
				else_if = {
					limit = {
						NOT = { exists = scope:dragon_2 }
						this != scope:dragon_1
						this != scope:dragon_3
					}
					save_scope_as = dragon_2
				}
				else_if = {
					limit = {
						NOT = { exists = scope:dragon_3 }
						this != scope:dragon_1
						this != scope:dragon_2
					}
					save_scope_as = dragon_3
				}
			}
		}
		else = {
			every_in_list = {
				list = generated_eggs
				limit = {
					has_variable = destined_eggs
				}
				agot_remove_dragon_egg = { EGG = this }
			}
		}

		# Get center portrait
		if = {
			limit = { exists = scope:dragon_2 }
			scope:dragon_2 = {
				save_scope_as = center_portrait_0604
			}
		}
		else_if = {
			limit = { exists = scope:sacrifice }
			scope:sacrifice = {
				save_scope_as = center_portrait_0604
			}
		}
		else_if = {
			limit = { exists = scope:heir_blood_donor }
			scope:heir_blood_donor = {
				save_scope_as = center_portrait_0604
			}
		}
	}

	option = {
		name = {
			trigger = {
				hatching_ceremony_succeeded = yes
			}
			text = agot_targaryen_exile_invasion.0604.a
		}
		name = {
			trigger = {
				var:hatching_ceremony = flag:failure
			}
			text = agot_targaryen_exile_invasion.0604.b
		}
		if = {
			limit = {
				hatching_ceremony_succeeded = yes
			}
			if = {
				limit = {
					exists = scope:egg_owner
				}
				scope:egg_owner = {
					save_scope_as = hatcher
				}
			}
			else = {
				save_scope_as = hatcher
			}
			every_player = {
				limit = {
					this != root
					AND = {
						exists = title:e_the_iron_throne.holder
						this != title:e_the_iron_throne.holder
					}
				}
				trigger_event = agot_targaryen_exile_invasion.0305
			}
			title:e_the_iron_throne.holder ?= {
				trigger_event = agot_targaryen_exile_invasion.0306
			}
		}
		else = {
			increase_wounds_no_death_effect = { REASON = hatching_sacrifice }
			hidden_effect = {
				scope:guide = {
					death = {
						death_reason = death_vanished
					}
				}
			}
		}
	}

	after = {
		if = {
			limit = {
				hatching_ceremony_succeeded = yes
			}
			hidden_effect = { targ_destined_dragon_creation_effect = yes }
		}
		if = {
			limit = {
				var:status_602 ?= flag:special_option_enabled
			}
			# Build Special Traits
			if = {
				limit = {
					var:status_602 ?= flag:heir_sacrifice
				}
				random_courtier = {
					limit = {
						has_trait = dragon
						age < 1
					}
					add_trait = dragon_physique_good_3
					add_trait = dragon_fertile
				}
			}
			else_if = {
				limit = {
					var:status_602 ?= flag:sacrifice
				}
				hidden_effect = {
					random_list = {
						25 = {
							# Nothing
						}
						75 = {
							every_courtier = {
								limit = {
									has_trait = dragon
									age < 1
								}
								random_list = {
									1 = {
										add_trait = dragon_physique_good_3
									}
									1 = {
										add_trait = dragon_physique_good_2
									}
									1 = {
										add_trait = dragon_physique_good_1
									}
									1 = {
										add_trait = dragon_physique_bad_3
									}
									1 = {
										add_trait = dragon_physique_bad_2
									}
									1 = {
										add_trait = dragon_physique_bad_1
									}
									1 = {
										add_trait = dragon_swift
									}
									1 = {
										add_trait = dragon_slow
									}
									1 = {
										add_trait = dragon_spindly
									}
									1 = {
										add_trait = dragon_majestic
									}
									1 = {
										add_trait = dragon_ugly
									}
									1 = {
										add_trait = dragon_fertile
									}
								}
							}
						}
					}
				}
			}
			else_if = {
				limit = {
					OR = {
						var:status_602 ?= flag:self_blood_donor
						var:status_602 ?= flag:heir_blood_donor
					}
				}
				every_courtier = {
					limit = {
						has_trait = dragon
						age < 1
					}
					hidden_effect = { agot_give_random_physical_traits = yes }
				}
			}
		}
		if = { # Order of Operations, give heir their dragon
			limit = {
				hatching_ceremony_succeeded = yes
			}
			# Heir grabs their own dragon if you used their blood
			if = {
				limit = {
					exists = scope:heir_blood_donor
				}
				if = {
					limit = {
						scope:heir_blood_donor = { is_male = yes }
					}
					scope:heir_blood_donor = { give_nickname = nick_the_father_of_dragons }
				}
				else = {
					scope:heir_blood_donor = { give_nickname = nick_the_mother_of_dragons }
				}
				if = {
					limit = {
						agot_canon_dragons_enabled = yes
						scope:heir_blood_donor = {
							is_character_targaryen_9 = yes
						}
						any_courtier = {
							has_trait = dragon
							is_character_dragon_drogon = yes
						}
					}
					random_courtier = {
						limit = {
							has_trait = dragon
							is_character_dragon_drogon = yes
						}
						save_scope_as = heir_blood_donor_dragon
					}
				}
				else = {
					random_courtier = {
						limit = {
							has_trait = dragon
						}
						weight = {
							base = 1
							modifier = {
								add = 500
								has_good_genetic_trait = yes
							}
						}
						save_scope_as = heir_blood_donor_dragon
					}
				}
				agot_bond_dragon_relation_effect = {
					ACTOR = scope:heir_blood_donor
					DRAGON = scope:heir_blood_donor_dragon
				}
			}
			# If successful, trigger next event
			trigger_event = agot_targaryen_exile_invasion.0605
		}
	}
}

agot_targaryen_exile_invasion.0605 = {
	type = character_event
	title = agot_targaryen_exile_invasion.0605.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					exists = scope:heir_blood_donor
				}
				desc = {
					desc = agot_targaryen_exile_invasion.0605.desc_heir_start
					triggered_desc = {
						trigger = {
							ai_compassion < 0
						}
						desc = agot_targaryen_exile_invasion.0605.desc_heir_emote_bad
					}
					triggered_desc = {
						trigger = {
							ai_compassion >= 0
						}
						desc = agot_targaryen_exile_invasion.0605.desc_heir_emote_good
					}
					desc = agot_targaryen_exile_invasion.0605.desc_heir_end
				}
			}
			triggered_desc = {
				trigger = {
					NOT = { exists = scope:heir_blood_donor }
				}
				desc = agot_targaryen_exile_invasion.0605.desc
			}
		}
	}
	theme = dragon
	override_background = {
		reference = agot_dragonpit
	}
	override_effect_2d = {
		reference = smoke
	}
	left_portrait = {
		character = root
		animation = disbelief
	}
	right_portrait = {
		trigger = {
			exists = scope:heir_blood_donor
		}
		character = scope:heir_blood_donor
		animation = happiness
	}
	lower_center_portrait = {
		character = scope:dragon_1
		animation = dragon_head
	}
	lower_left_portrait = {
		character = scope:dragon_2
		animation = dragon_head
	}
	lower_right_portrait = {
		character = scope:dragon_3
		animation = dragon_head
	}

	option = {
		name = agot_targaryen_exile_invasion.0605.a
		if = {
			limit = {
				NOT = {
					exists = scope:heir_blood_donor
				}
			}
			if = {
				limit = {
					is_male = yes
				}
				give_nickname = nick_the_father_of_dragons
			}
			else = {
				give_nickname = nick_the_mother_of_dragons
			}
		}
		trigger_event = agot_targaryen_exile_invasion.0606
	}
}

agot_targaryen_exile_invasion.0606 = {
	type = character_event
	title = agot_targaryen_exile_invasion.0606.t
	desc = agot_targaryen_exile_invasion.0606.desc
	widget = {
		is_shown = {
			is_ai = no
		}
		gui = "agot_character_selection_two_options"
		container = "custom_widgets_container"
	}
	override_background = {
		reference = agot_dragonpit
	}
	theme = dragon
	left_portrait = {
		character = root
		animation = thinking
	}
	immediate = {
		if = {
			limit = {
				is_ai = yes
			}
			if = {
				limit = {
					is_character_targaryen_9 = yes
					agot_canon_dragons_enabled = yes
					any_courtier = {
						has_trait = dragon
						is_character_dragon_drogon = yes
					}
				}
				random_courtier = {
					limit = {
						has_trait = dragon
						is_character_dragon_drogon = yes
					}
					save_scope_as = chosen_dragon
				}
			}
			else = {
				random_courtier = {
					limit = {
						has_trait = dragon
						NOT = {
							any_relation = {
								type = agot_dragon
							}
						}
					}
					weight = {
						base = 1
						modifier = {
							has_trait = dragon_physique_good_3
							add = 100
						}
					}
					save_scope_as = chosen_dragon
				}
			}
		}
		else = {
			every_courtier = {
				limit = {
					has_trait = dragon
					NOT = {
						any_relation = {
							type = agot_dragon
						}
					}
				}
				root = {
					add_to_variable_list = {
						name = possible_characters
						target = prev
					}
				}
			}
			ordered_in_list = {
				variable = possible_characters
				root = { set_variable = { name = si_selected_character value = prev } }
				save_scope_as = chosen_dragon
			}
		}
	}
	option = {
		name = agot_targaryen_exile_invasion.0606.a
		custom_tooltip = agot_targaryen_exile_invasion.0606.a_tt
		var:si_selected_character ?= {
			save_scope_as = chosen_dragon
		}
		agot_bond_dragon_relation_effect = {
			ACTOR = root
			DRAGON = scope:chosen_dragon
		}
	}

	after = {
		if = {
			limit = {
				has_variable = si_selected_character
			}
			remove_variable = si_selected_character
		}
		scope:chosen_dragon = {
			if = {
				limit = {
					has_variable = si_selecting_character
				}
				remove_variable = si_selecting_character
			}
		}
		if = {
			limit = {
				has_variable_list = possible_characters
			}
			clear_variable_list = possible_characters
		}
		if = {
			limit = {
				player_heir ?= {
					NOT = { scope:heir_blood_donor ?= this }
					house = root.house
					NOT = {
						any_relation = {
							type = agot_dragon
						}
					}
				}
			}
			trigger_event = agot_targaryen_exile_invasion.0607
		}
	}
}

agot_targaryen_exile_invasion.0607 = {
	type = character_event
	title = agot_targaryen_exile_invasion.0607.t
	desc = agot_targaryen_exile_invasion.0607.desc
	override_background = {
		reference = agot_dragonpit
	}
	theme = dragon
	left_portrait = {
		character = root
		animation = thinking
	}
	right_portrait = {
		character = scope:heir_asking_for_dragon
		animation = beg
	}
	lower_center_portrait = {
		character = scope:dragon_for_heir
		animation = dragon_head
	}
	immediate = {
		player_heir = {
			save_scope_as = heir_asking_for_dragon
		}
		random_courtier = {
			limit = {
				has_trait = dragon
				NOT = {
					any_relation = {
						type = agot_dragon
					}
				}
			}
			save_scope_as = dragon_for_heir
		}
	}
	option = {
		name = agot_targaryen_exile_invasion.0607.a
		agot_bond_dragon_relation_effect = {
			ACTOR = scope:heir_asking_for_dragon
			DRAGON = scope:dragon_for_heir
		}
		scope:heir_asking_for_dragon = {
			if = {
				limit = {
					has_opinion_modifier = {
						modifier = stole_artifact_from_me
						target = root
					}
				}
				remove_opinion = {
					modifier = stole_artifact_from_me
					target = root
				}
			}
		}
	}
	option = {
		name = agot_targaryen_exile_invasion.0607.b
		trigger = {
			is_ai = no
		}
	}
}

# Dragon Hatching Chance
agot_targaryen_exile_invasion.0610 = {
	hidden = yes
	immediate = {
		dragon_hatching_chance_effect = yes
		trigger_event = agot_targaryen_exile_invasion.0604
	}
}

agot_targaryen_exile_invasion.0800 = {
	type = character_event
	window = fullscreen_event
	title = agot_targaryen_exile_invasion.0800.t
	desc = agot_targaryen_exile_invasion.0800.desc
	theme = war
	override_background = { reference = agot_fullscreen_targaryen }
	option = {
		name = agot_targaryen_exile_invasion.0800.a
	}
}

agot_targaryen_exile_invasion.0801 = {
	type = character_event
	title = agot_targaryen_exile_invasion.0801.t
	desc = agot_targaryen_exile_invasion.0801.desc
	theme = war
	override_background = {
		reference = agot_iron_throne
	}
	left_portrait = {
		character = root
		animation = rage
	}
	option = {
		name = agot_targaryen_exile_invasion.0801.a
		hidden_effect = {
			random_owned_story = {
				limit = {
					story_type = story_agot_targaryen_exile_invasion
				}
				end_story = yes
			}
		}
	}
}

agot_targaryen_exile_invasion.0802 = {
	type = character_event
	title = agot_targaryen_exile_invasion.0802.t
	desc = agot_targaryen_exile_invasion.0802.desc
	theme = war
	override_background = {
		reference = agot_iron_throne
	}
	left_portrait = {
		character = root
		animation = rage
	}
	right_portrait = {
		character = scope:defender
		animation = rage
	}
	immediate = {}
	option = {
		name = agot_targaryen_exile_invasion.0802.a
		hidden_effect = {
			agot_purge_and_convert_targ_and_blackfyre_scripted_alliances = { VARIABLE_NAME = targ_loyalist_story_content_ally }
			agot_purge_and_convert_targ_and_blackfyre_scripted_alliances = { VARIABLE_NAME = blackfyre_loyalist_story_content_ally }
		}
	}
	after = {
		agot_invasions_restore_or_grant_it_claims = yes
		trigger_event = { id = agot_targaryen_exile_invasion.0803 years = 1 } # Fire a hidden event that regenerates the claims in case the AI loses them from imprisonment
	}
}

agot_targaryen_exile_invasion.0803 = {
	type = character_event
	hidden = yes
	immediate = {
		if = {
			limit = {
				is_alive = yes
			}
			agot_invasions_restore_or_grant_it_claims = yes
		}
	}
}

agot_targaryen_exile_invasion.0804 = {
	type = character_event
	hidden = yes
	immediate = {
		if = {
			limit = {
				is_at_war = yes
				any_character_war = {
					is_attacker = root
					using_cb = agot_targaryen_exile_invasion_war_cb
				}
			}
			trigger_event = agot_targaryen_exile_invasion.0805
		}
	}
}


agot_targaryen_exile_invasion.0805 = {
	type = character_event
	title = agot_targaryen_exile_invasion.0805.t
	desc = agot_targaryen_exile_invasion.0805.desc
	theme = war
	override_background = {
		reference = agot_iron_throne
	}
	left_portrait = {
		character = root
		animation = idle
	}
	right_portrait = {
		character = title:e_the_iron_throne.holder
		animation = rage
	}
	immediate = {
		agot_invasions_restore_or_grant_it_claims = yes
		title:e_the_iron_throne.holder = {
			if = {
				limit = {
					is_at_war = yes
					any_character_war = {
						using_cb = faegon_invasion_war_cb
					}
				}
				random_character_war = {
					limit = {
						using_cb = faegon_invasion_war_cb
					}
					primary_attacker = {
						save_scope_as = faegon
					}
				}
			}
		}
	}
	option = {
		name = agot_targaryen_exile_invasion.0805.a
		add_character_modifier = {
			modifier = agot_exile_faegon_invader_embark_modifier
			years = 5
		}
		ai_chance = {
			base = 99
		}
	}
	option = {
		name = agot_targaryen_exile_invasion.0805.b
		trigger = {
			exists = scope:faegon
			trigger_if = {
				limit = {
					has_multiple_players = yes
				}
				scope:faegon = {
					is_ai = yes
				}
			}
		}
		if = {
			limit = {
				is_at_war_with = title:e_the_iron_throne.holder
			}
			every_character_war = {
				limit = {
					primary_defender = title:e_the_iron_throne.holder
				}
				end_war = invalidated
			}
		}
		agot_invasions_move_to_new_court = { NEW_LIEGE = scope:faegon }
		ai_chance = {
			base = 1
		}
	}
}

agot_targaryen_exile_invasion.0810 = {
	type = character_event
	window = fullscreen_event
	title = agot_targaryen_exile_invasion.0810.t
	desc = agot_targaryen_exile_invasion.0810.desc
	theme = war
	override_icon = {
		reference = "gfx/interface/icons/event_types/type_war.dds"
	}
	immediate = {}
	option = {
		name = agot_targaryen_exile_invasion.0810.b
	}
	option = {
		name = agot_targaryen_exile_invasion.0810.a
		add_internal_flag = special
		trigger = {
			has_dlc_feature = roads_to_power
			has_multiple_players = no
		}
		set_player_character = scope:attacker
	}
}

agot_targaryen_exile_invasion.9999 = {
	type = character_event
	title = agot_targaryen_exile_invasion.9999.t
	desc = agot_targaryen_exile_invasion.9999.desc
	theme = war
	override_icon = {
		reference = "gfx/interface/icons/event_types/type_war.dds"
	}
	immediate = {
		
		
	}
	option = {
		name = agot_targaryen_exile_invasion.9999.b
		character:Targaryen_9 = {
			add_courtier = character:Targaryen_8
		}
		
	}
	option = {
		name = agot_targaryen_exile_invasion.9999.a
		character:Targaryen_8 = {
			death = {
				death_reason = death_burned
				killer = character:Targaryen_9
			}
		}
	}
}
